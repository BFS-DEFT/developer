---
swagger: "2.0"
info:
  version: "1.0.2"
basePath: "/gateway"
tags:
- name: "v2:card-token"
- name: "v2:biller"
- name: "v2:bank-token"
- name: "v2:card"
- name: "v2:audit"
- name: "v2: dda"
- name: "v2:mgl-user"
- name: "v2:drn"
- name: "v2:transaction"
- name: "v2:role"
- name: "v2:message"
- name: "v2:office-location"
- name: "v2:permission"
- name: "v2:Payment Schedule"
- name: "v2:biller-user"
- name: "v2:bsb"
- name: "v2:industry"
- name: "v2:auth"
- name: "v2:payer"
- name: "v2:fee"
- name: "v2:aduser"
schemes:
- "http"
- "https"
paths:
  /v2/aduser/search:
    post:
      tags:
      - "v2:aduser"
      summary: "Search for Active Directory Users"
      description: "This operation to search from active directory based on input "
      operationId: "findUsersInAd"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/AdUserSearchRequestDto"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AdUserSearchResponseDto"
  /v2/audit:
    get:
      tags:
      - "v2:audit"
      summary: "Get an audit log record of given payer"
      description: "This operation is for retrieving  payer's audit logs only for\
        \ users with permissions."
      operationId: "searchAuditLog"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        minimum: 0.0
        format: "int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        minimum: 0.0
        format: "int32"
      - name: "order"
        in: "query"
        required: false
        type: "string"
        enum:
        - "ASC"
        - "DESC"
      - name: "orderBy"
        in: "query"
        required: false
        type: "string"
      - name: "eventType"
        in: "query"
        required: false
        type: "string"
        enum:
        - "SERVICE"
        - "REQUEST_LOG"
        - "LOGON"
      - name: "payerId"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/AuditLog"
    post:
      tags:
      - "v2:audit"
      summary: "Create an audit log record"
      description: "This operation is for creating an audit log."
      operationId: "create"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/AuditLog"
      responses:
        default:
          description: "successful operation"
  /v2/audit/all:
    get:
      tags:
      - "v2:audit"
      summary: "Return all audit log entries"
      description: "This operation is for retrieving all audit log entries."
      operationId: "getAuditAll"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/AuditLog"
  /v2/audit/anonymous/{id}:
    get:
      tags:
      - "v2:audit"
      summary: "Get an audit log record from record id"
      description: "This operation is for retrieving an audit log for users with no\
        \ permissions."
      operationId: "getAuditLogNoPermission"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Record Identifier"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/AuditLog"
  /v2/audit/logoff:
    post:
      tags:
      - "v2:audit"
      summary: "Create an audit log record"
      description: "The logoff operation creates an audit log."
      operationId: "logoff"
      produces:
      - "application/json"
      parameters: []
      responses:
        default:
          description: "successful operation"
  /v2/audit/logon:
    post:
      tags:
      - "v2:audit"
      summary: "Create an audit log record"
      description: "The logon operation returns the superset of permissions for the\
        \ logged in user and creates an audit log."
      operationId: "logon"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/LogonDto"
  /v2/audit/{id}:
    get:
      tags:
      - "v2:audit"
      summary: "Get an audit log record from record id"
      description: "This operation is for retrieving an audit log only for users with\
        \ permissions."
      operationId: "getAuditLog"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Record Identifier"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/AuditLog"
  /v2/auth:
    get:
      tags:
      - "v2:auth"
      summary: "Returns the user details of the authenticated user"
      description: ""
      operationId: "getUserDetails"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/UserDetailsResponse"
  /v2/auth/ivr:
    post:
      tags:
      - "v2:auth"
      summary: "Authenticates payers drn and ivr code"
      description: ""
      operationId: "ivrAuthValidation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/IvrAuthRequest"
      responses:
        200:
          description: "Valid payer"
        400:
          description: "Bad request"
  /v2/auth/token:
    post:
      tags:
      - "v2:auth"
      summary: "A wrapped JWT value"
      description: "Generates a JWT with the provided claims"
      operationId: "generateJwt"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "subject"
        in: "query"
        description: "subject"
        required: false
        type: "string"
      - name: "ttl"
        in: "query"
        description: "ttl"
        required: false
        type: "integer"
        format: "int64"
      - name: "login"
        in: "query"
        description: "login"
        required: false
        type: "boolean"
      - in: "body"
        name: "body"
        required: false
        schema:
          type: "object"
          additionalProperties:
            type: "object"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/JwtToken"
  /v2/bank-token:
    get:
      tags:
      - "v2:bank-token"
      summary: "Retrieves a list of bank Tokens"
      description: ""
      operationId: "getBankTokens"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "payerId"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Request successful"
        400:
          description: "Bad request"
    post:
      tags:
      - "v2:bank-token"
      summary: "Create a Bank Account token"
      description: "This operation is to create a Bank Account in the Payer's Wallet.\
        \ <br>Any authenticated user can create a Bank Account but for the authenticated\
        \ username only.<h4>Exceptions</h4><br/><table class='fullwidth'><thead><th>Code</th><th>Description</th></thead><tbody><tr><td\
        \ width='15%' class='code'>400515</td><td>Wallet account does not exists</td></tr><tr><td\
        \ width='15%' class='code'>400514</td><td>Account already exist for the payer</td></tr><tr><td\
        \ width='15%' class='code'>400530</td><td>BSB does not exists</td></tr></tbody></table>"
      operationId: "createWalletAccount"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "The bank account details to be added an associated"
        required: true
        schema:
          $ref: "#/definitions/BankAccountDto"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/BankAccountResponseDto"
        201:
          description: "Bank account added"
        400:
          description: "Bad request"
  /v2/bank-token/{token}:
    put:
      tags:
      - "v2:bank-token"
      summary: "Update a Bank Account token"
      description: "This operation is to update a Bank Account in the Payer's Wallet.\
        \ <br>Any authenticated user can update a Bank Account but for the authenticated\
        \ username only.<h4>Exceptions</h4><br/><table class='fullwidth'><thead><th>Code</th><th>Description</th></thead><tbody><tr><td\
        \ width='15%' class='code'>400515</td><td>Wallet account does not exists</td></tr><tr><td\
        \ width='15%' class='code'>400530</td><td>BSB does not exists</td></tr></tbody></table>"
      operationId: "updateWalletAccount"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "token"
        in: "path"
        description: "Bank account id to be updated"
        required: true
        type: "string"
        pattern: "\\d+"
      - in: "body"
        name: "body"
        description: "The bank account details to be updated"
        required: true
        schema:
          $ref: "#/definitions/BankAccountDto"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/BankAccountResponseDto"
        201:
          description: "Bank account updated"
        400:
          description: "Bad request"
    delete:
      tags:
      - "v2:bank-token"
      summary: "Remove bank account from wallet for payer."
      description: "This operation removes the bank account from Payer <br>If the\
        \ bank account removed is a default bank account for the payer, payer will\
        \ not have a default account after this operation.<h4>Exceptions</h4><br/><table\
        \ class='fullwidth'><thead><th>Code</th><th>Description</th></thead><tbody><tr><td\
        \ width='15%' class='code'>400515</td><td>Wallet account does not exists</td></tr></tbody></table>"
      operationId: "deleteWalletAccount"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "token"
        in: "path"
        description: "Bank account token which will be removed from payer"
        required: true
        type: "string"
      responses:
        400:
          description: "Unable to remove bank account from payer."
  /v2/biller:
    get:
      tags:
      - "v2:biller"
      summary: "Search for Billers"
      description: "This operation to search billers based on the following - id,\
        \ name, status and type"
      operationId: "getBillers"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        minimum: 0.0
        format: "int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        minimum: 0.0
        format: "int32"
      - name: "order"
        in: "query"
        required: false
        type: "string"
        enum:
        - "ASC"
        - "DESC"
      - name: "orderBy"
        in: "query"
        required: false
        type: "string"
      - name: "id"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
      - name: "rootBillerId"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
      - name: "name"
        in: "query"
        required: false
        type: "string"
      - name: "type"
        in: "query"
        required: false
        type: "string"
      - name: "status"
        in: "query"
        required: false
        type: "string"
      - name: "includeParents"
        in: "query"
        required: false
        type: "boolean"
      - name: "ddaEnabled"
        in: "query"
        required: false
        type: "boolean"
      responses:
        200:
          description: "Search successful"
        400:
          description: "Bad request"
  /v2/biller-user:
    post:
      tags:
      - "v2:biller-user"
      summary: "Create a Biller user"
      description: "This operation is for creating a Biller user."
      operationId: "create"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/BillerUserCreateRequest"
      responses:
        201:
          description: "User added"
        400:
          description: "Bad request"
  /v2/biller-user/search:
    post:
      tags:
      - "v2:biller-user"
      summary: "Search for Biller Users"
      description: "Search for Biller Users."
      operationId: "search"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/BillerUserSearchRequestDto"
      responses:
        200:
          description: "Search successful"
        400:
          description: "Bad request"
  /v2/biller-user/{id}:
    get:
      tags:
      - "v2:biller-user"
      summary: "Returns details of a Biller user"
      description: "This operation returns the details of a Biller user for the id."
      operationId: "getBillerUser"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Record Identifier"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      responses:
        200:
          description: "Biller User found"
        404:
          description: "Could not find biller user"
    put:
      tags:
      - "v2:biller-user"
      summary: "Update Biller user details"
      description: "This operation is for modifying user details for a Biller user."
      operationId: "update"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Record Identifier"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/BillerUserBaseDto"
      responses:
        400:
          description: "Bad request"
        204:
          description: "Biller user details updated"
        404:
          description: "Invalid user"
  /v2/biller-user/{id}/activate:
    post:
      tags:
      - "v2:biller-user"
      summary: "Activate Biller user from id"
      description: "This operation is for activating a Biller user."
      operationId: "activate"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Record Identifier"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      responses:
        204:
          description: "User activated"
        404:
          description: "Invalid user"
  /v2/biller-user/{id}/biller-role:
    post:
      tags:
      - "v2:biller-user"
      summary: "Update Biller Roles"
      description: "This operation is for updating multiple Biller Roles for a Biller\
        \ user."
      operationId: "updateBillerRoles"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Record Identifier"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/BillerRoleUpdateRequest"
      responses:
        201:
          description: "User updated"
        400:
          description: "Bad request"
  /v2/biller-user/{id}/deactivate:
    post:
      tags:
      - "v2:biller-user"
      summary: "Deactivate Biller user from id"
      description: "This operation is for deactivating a Biller user."
      operationId: "deactivate"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Record Identifier"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      responses:
        204:
          description: "User deactivated"
        404:
          description: "Invalid user"
  /v2/biller/list-root:
    get:
      tags:
      - "v2:biller"
      summary: "Get biller roots for user"
      description: "This operation is for getting distinct biller roots(ancestors)\
        \ for a give user id"
      operationId: "getBillerRoots"
      produces:
      - "application/json"
      parameters:
      - name: "permission-id"
        in: "query"
        description: "permission-id"
        required: false
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BillerDto"
  /v2/biller/search:
    post:
      tags:
      - "v2:biller"
      summary: "Search for Billers"
      description: "This operation to search billers based on the following parameters\
        \ - id, name, status and type"
      operationId: "search"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/BillerSearchWithPagingRequestDto"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BillerSearchDto"
  /v2/biller/tree:
    post:
      tags:
      - "v2:biller"
      summary: "Get biller hierarchy from id"
      description: "This operation is for viewing biller hierarchy"
      operationId: "getBillerHierarchy"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/BillerHierarchyWithPagingRequestDto"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/BillerHierarchyDto"
  /v2/biller/{id}:
    get:
      tags:
      - "v2:biller"
      summary: "Get Biller information"
      description: "Returns Biller details with <br><ul><li>MID</li><li>Dynamic Name</li><li>Transaction\
        \ limit</li></ul>"
      operationId: "getBankStateBranchDetails"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Biller Identifier"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      responses:
        200:
          description: "Sucessful Request"
        400:
          description: "Bad request"
        404:
          description: "Biller not found with the given id"
  /v2/biller/{id}/tree:
    get:
      tags:
      - "v2:biller"
      summary: "Get biller hierarchy from id"
      description: "This operation is for viewing biller hierarchy"
      operationId: "getBillerHierarchy"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Biller Identifier"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      - name: "offset"
        in: "query"
        description: "skips the first n records "
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "limit"
        in: "query"
        description: "maximum number of records to return"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "order-by"
        in: "query"
        description: "order-by field"
        required: false
        type: "string"
        default: "name"
        enum:
        - "name"
        - "id"
        - "type"
        - "status"
      - name: "order"
        in: "query"
        description: "sort order for results - ASC/DESC"
        required: false
        type: "string"
        default: "ASC"
        enum:
        - "ASC"
        - "DESC"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/BillerHierarchyDto"
  /v2/bsb/{bsb}:
    get:
      tags:
      - "v2:bsb"
      summary: "Get BSB Details"
      description: "Returns details for a single BSB. <br>This list will include:\
        \ <br><ul><li>BSB</li><li>Financial Code</li><li>Address Line 1</li><li>Address\
        \ Line 2</li><li>City</li><li>State</li><li>Postcode</li><li>Payment Systems</li><li>Financial\
        \ Institution Name</li></ul>"
      operationId: "getBankStateBranchDetails"
      produces:
      - "application/json"
      parameters:
      - name: "bsb"
        in: "path"
        description: "Bank State Branch Identifier"
        required: true
        type: "string"
        pattern: "\\d+"
      responses:
        200:
          description: "Sucessful Request"
        400:
          description: "Bad request - BSB doesn't exist"
  /v2/card-token:
    get:
      tags:
      - "v2:card-token"
      summary: "Retrieves a list of Card Tokens"
      description: ""
      operationId: "getCardTokens"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "payerId"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
      - name: "rootBillerId"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/WalletPaymentCardResponseDto"
    post:
      tags:
      - "v2:card-token"
      summary: "Create a card token"
      description: "Error Codes:<ul><li>400922: Invalid rootBillerId, billerId combination</li><li>400002:\
        \ Missing mandatory field</li><li>400023: Invalid field format or length</li></ul>"
      operationId: "createCardToken"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "cardToken"
        description: "Card token details to store"
        required: false
        schema:
          $ref: "#/definitions/WalletPaymentCardDto"
      - name: "rootBillerId"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/WalletPaymentCardResponseDto"
        400:
          description: "invalid request"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ErrorValue"
    put:
      tags:
      - "v2:card-token"
      summary: "Updates a card token"
      description: "Error Codes:<ul><li>403001: Card token doesn't belong to the payer\
        \ or biller </li><li>400002: Missing mandatory field</li><li>404000: Card\
        \ token not found by ID</li><li>404001: Card token not found for payer or\
        \ biller</li></ul>"
      operationId: "updateCardTokenCompatible"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "updateCardToken"
        description: "Card toke update details"
        required: false
        schema:
          $ref: "#/definitions/UpdateCardTokenDto"
      - name: "rootBillerId"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/WalletPaymentCardResponseDto"
        400:
          description: "invalid request"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ErrorValue"
      deprecated: true
  /v2/card-token/{token}:
    put:
      tags:
      - "v2:card-token"
      summary: "Updates a card token"
      description: "Error Codes:<ul><li>403001: Card token doesn't belong to the payer\
        \ or biller </li><li>400002: Missing mandatory field</li><li>404000: Card\
        \ token not found by ID</li><li>404001: Card token not found for payer or\
        \ biller</li></ul>"
      operationId: "updateCardToken"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "updateCardToken"
        description: "Card toke update details"
        required: false
        schema:
          $ref: "#/definitions/UpdateCardTokenDto"
      - name: "rootBillerId"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/WalletPaymentCardResponseDto"
        400:
          description: "invalid request"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ErrorValue"
    delete:
      tags:
      - "v2:card-token"
      summary: "Deletes a card token"
      description: "Error Codes:<ul><li>403001: Card token doesn't belong to the payer\
        \ or biller </li><li>400002: Missing mandatory field</li><li>404001: Card\
        \ token not found for payer or biller</li></ul>"
      operationId: "deleteToken"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "token"
        in: "path"
        required: true
        type: "string"
      - name: "rootBillerId"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "invalid request"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ErrorValue"
  /v2/card/bin-details:
    post:
      tags:
      - "v2:card"
      summary: "Get a list of Bank Identification Number details"
      description: "This operation will return the Bank Identification Number details\
        \ for the specified schemes <br>The scheme is the text identifying the brand\
        \ of the card, examples: <br><ul><li>'VISA'</li><li>'MASTERCARD'</li><li>'DINERS\
        \ CLUB INTERNATIONAL'</li><li>'AMERICAN EXPRESS'</li></ul> <br>The search\
        \ is case insensitive and leading/trailing will be ignored (but other spaces\
        \ are mandatory) <br>"
      operationId: "getBankIdentificationNumbers"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Holds a list of the card schems (brands) to return."
        required: true
        schema:
          $ref: "#/definitions/CardSchemes"
      responses:
        200:
          description: "Sucessfully request"
        400:
          description: "Bad Request"
  /v2/card/bin/{bin}:
    get:
      tags:
      - "v2:card"
      summary: "Get Bank Identification Number detail"
      description: "This operation will return the Bank Identification Number detail\
        \ for the specified bin. <br>If the Bank Identification Number exist and is\
        \ supported for payment the details are returned, otherwise an error 404 will\
        \ be returned. <br><br>The details are based on information regularly released\
        \ by APRA. If no details are recorded for the specified bin the card scheme\
        \ will <br>be determined from some general rules - in this case only the bin\
        \ and the card scheme will be populated in the response."
      operationId: "getBankIdentificationNumber"
      produces:
      - "application/json"
      parameters:
      - name: "bin"
        in: "path"
        description: "The bin id indentifying the Bank Identification Number."
        required: true
        type: "string"
      responses:
        200:
          description: "Sucessfully request"
        404:
          description: "Bank Identification Number not found or scheme not supported"
  /v2/dda/search:
    post:
      tags:
      - "v2: dda"
      summary: "Validates the DRNs and returns DDA enabled DRNs only"
      description: ""
      operationId: "getBankTokens"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/DDAuthDrnsDto"
      - name: "rootBillerId"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Request successful"
        400:
          description: "Bad request"
  /v2/drn:
    get:
      tags:
      - "v2:drn"
      summary: "Search for DRNs"
      description: "Search for DRN"
      operationId: "searchDrn"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        minimum: 0.0
        format: "int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        minimum: 0.0
        format: "int32"
      - name: "order"
        in: "query"
        required: false
        type: "string"
        enum:
        - "ASC"
        - "DESC"
      - name: "orderBy"
        in: "query"
        required: false
        type: "string"
      - name: "drn"
        in: "query"
        required: false
        type: "string"
      - name: "billerId"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
      - name: "type"
        in: "query"
        required: false
        type: "string"
      - name: "status"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Search successful"
        400:
          description: "Bad request"
    post:
      tags:
      - "v2:drn"
      summary: "Search for DRN"
      description: "Search for DRN."
      operationId: "search"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/DrnSearchWithPagingRequestDto"
      responses:
        200:
          description: "Search successful"
        400:
          description: "Bad request"
      deprecated: true
  /v2/drn/biller:
    post:
      tags:
      - "v2:drn"
      summary: "Biller information from DRN."
      description: "Check for the biller owner for the DRN passed and returns information\
        \ of the biller<h4>Exceptions</h4><br/><table class='fullwidth'><thead><th>Code</th><th>Description</th></thead><tbody><tr><td\
        \ width='15%' class='code'>400510</td><td>DRN is not valid DRN - [DRN]</td></tr><tr><td\
        \ width='15%' class='code'>400511</td><td>Biller Account could not be resolved\
        \ for DRN - [DRN] </td></tr></tbody></table>"
      operationId: "findBillerForDRN"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "drn"
        description: "DEFT Reference Number to validate"
        required: false
        schema:
          $ref: "#/definitions/SingleDrnDto"
      responses:
        200:
          description: "Request successful"
        400:
          description: "Bad request"
  /v2/drn/card-payment/validation:
    post:
      tags:
      - "v2:drn"
      summary: "Validate a DRN for Card payment. (Deprecated use GET /v2/drn/{drn}\
        \ instead)"
      description: "Validates that the DRN can be used for a card payment.<br/>Will\
        \ check if the DRN is valid and if the DRN or the biller account associated\
        \ are in a state allowing payments. If payments can be made using this DRN\
        \ this method will return <b>biller details with the Support payment card\
        \ schems and Supported payment descriptions</b>, otherwise it will return\
        \ following errors with appropriate code.<br/><h4>Exceptions</h4><br/><table\
        \ class='fullwidth'><thead><th>Code</th><th>Description</th></thead><tbody><tr><td\
        \ width='15%' class='code'>400510</td><td>DRN is not valid DRN - [DRN]</td></tr><tr><td\
        \ width='15%' class='code'>400511</td><td>Biller Account could not be resolved\
        \ for DRN - [DRN] </td></tr><tr><td width='15%' class='code'>400512</td><td>Biller\
        \ Account cannot accept payment, bill account - [Account] & DRN - [DRN]</td></tr></tbody></table>"
      operationId: "isValidForCardPayments"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "drn"
        description: "DEFT Reference Number to validate"
        required: false
        schema:
          $ref: "#/definitions/SingleDrnDto"
      responses:
        200:
          description: "Request successful"
          schema:
            $ref: "#/definitions/DrnValidationForPaymentResponse"
        400:
          description: "Bad request"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ErrorValue"
  /v2/drn/generation:
    post:
      tags:
      - "v2:drn"
      summary: "Generates a DRN."
      description: "Generates a DRN from biller account number and customer number.<br/>"
      operationId: "generateDRN"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/DRNGenerationRequestDto"
      - name: "rootBillerId"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Request successful"
        400:
          description: "Bad request"
  /v2/drn/payment/validation:
    post:
      tags:
      - "v2:drn"
      summary: "Validate a DRN for payment. (Deprecated use GET /v2/drn/{drn} instead)"
      description: "Validates that the DRN can be used for a payment.<br/>Will check\
        \ if the DRN is valid and if the DRN or the biller account associated are\
        \ in a state allowing payments. If payments can be made using this DRN this\
        \ method will return <b>biller details</b>, otherwise it will return following\
        \ errors with appropriate code.<br/><h4>Exceptions</h4><br/><table class='fullwidth'><thead><th>Code</th><th>Description</th></thead><tbody><tr><td\
        \ width='15%' class='code'>400510</td><td>DRN is not valid DRN - [DRN]</td></tr><tr><td\
        \ width='15%' class='code'>400511</td><td>Biller Account could not be resolved\
        \ for DRN - [DRN] </td></tr><tr><td width='15%' class='code'>400512</td><td>Biller\
        \ Account cannot accept payment, bill account - [Account] & DRN - [DRN]</td></tr></tbody></table>"
      operationId: "isValidForPayments"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "drn"
        description: "DEFT Reference Number to validate"
        required: false
        schema:
          $ref: "#/definitions/SingleDrnDto"
      responses:
        200:
          description: "Request successful"
          schema:
            $ref: "#/definitions/DrnValidationForPaymentResponse"
        400:
          description: "Bad request"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ErrorValue"
  /v2/drn/validation:
    post:
      tags:
      - "v2:drn"
      summary: "Validate a DRN."
      description: "Validates the checksum of a DRN.<br/>As the DRN type is unknown\
        \ the validation will be done for all DRN types - if the DRN pass the validation\
        \ of at least one DRN type this method will return <b>true</b>, otherwise\
        \ it will return <b>false</b>.<br/>Note, the DRN doesn't have to exist in\
        \ the DEFT database for the validation to take place.<br/>"
      operationId: "isValidLuhnChecksum"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "drn"
        description: "DEFT Reference Number to validate"
        required: false
        schema:
          $ref: "#/definitions/SingleDrnDto"
      responses:
        200:
          description: "Request successful"
        400:
          description: "Bad request"
  /v2/drn/{drn}:
    get:
      tags:
      - "v2:drn"
      summary: "Validates a DRN for payment"
      description: "Returns Biller details if DRN is valid."
      operationId: "findDrn"
      produces:
      - "application/json"
      parameters:
      - name: "drn"
        in: "path"
        required: true
        type: "string"
      - name: "paymentType"
        in: "query"
        required: false
        type: "string"
        enum:
        - "CREDIT_CARD"
        - "DIRECT_DEBIT"
        - "AUCTION"
      responses:
        200:
          description: "DRN's Biller details "
          schema:
            $ref: "#/definitions/BillerPaymentDto"
        400:
          description: "Invalid DRN or not supported for payment"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ErrorValue"
  /v2/fee/bank/drn/{drn}/channel/{channel}/frequency/{frequency}:
    get:
      tags:
      - "v2:fee"
      summary: "Get Applicable fees for the bank payments"
      description: "Returns applicable fees and surcharges for the payment transaction.\
        \ <br>Return infortion contains<br> - Biller Surcharge and/or Fee applicable\
        \ (given DRN and BIN details & frequency)<br><h4>Exceptions</h4><br/><table\
        \ class='fullwidth'><thead><th>Code</th><th>Description</th></thead><tbody></tbody></table>"
      operationId: "findFeeSurchargeForBankTran"
      produces:
      - "application/json"
      parameters:
      - name: "drn"
        in: "path"
        description: "DRN for which the fee/surcharge should be returned"
        required: true
        type: "string"
      - name: "channel"
        in: "path"
        description: "Channel can be IVR or Internet"
        required: true
        type: "string"
        enum:
        - "INTERNET"
        - "IVR"
        - "BPAY"
        - "AUSTRALIA_POST"
        - "LOCKED_BAG"
        - "PAYER_PORTAL_ONE_TIME"
        - "PAYER_PORTAL"
        - "BILLER_PORTAL"
        - "BILLER_PORTAL_VIRTUAL_TERMINAL"
        - "ADMIN_PORTAL"
        - "API"
        - "ECOM_TRANSPARENT_REDIRECT"
        - "ECOM_IFRAME"
        - "ECOM_HOSTED_PAYMENT_PAGE"
        - "API_EBIX"
        - "API_EDGEWISE"
        - "API_GALLAGHERS"
        - "API_GENKAN"
        - "API_RAW_IDEAS"
        - "AUCTION_PAY"
      - name: "frequency"
        in: "path"
        description: "Frequency of the payment, values can be ONE_OFF or RECURRING"
        required: true
        type: "string"
        enum:
        - "ONE_OFF"
        - "RECURRING"
      responses:
        200:
          description: "Sucessfully request"
        400:
          description: "Bad request"
        404:
          description: "Fee not found for the given combination"
  /v2/fee/biller/{billerid}/bin/{bin}/frequency/{frequency}:
    get:
      tags:
      - "v2:fee"
      summary: "Get Applicable fees for the payment"
      description: "Returns applicable fees for the payment transaction. <br>Return\
        \ infortion contains<br> - CARD SCHEME of BIN<br>- Biller Surcharge and/or\
        \ Fee applicable (given DRN and BIN details & frequency)<br>- If the card\
        \ is international or domestic<br><h4>Exceptions</h4><br/><table class='fullwidth'><thead><th>Code</th><th>Description</th></thead><tbody></tbody></table>"
      operationId: "findFeeByBillerId"
      produces:
      - "application/json"
      parameters:
      - name: "billerid"
        in: "path"
        description: "DEFT Biller Id"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      - name: "bin"
        in: "path"
        description: "Card BIN"
        required: true
        type: "string"
      - name: "frequency"
        in: "path"
        description: "Frequency of the payment, values can be ONE_OFF or RECURRING"
        required: true
        type: "string"
        enum:
        - "ONE_OFF"
        - "RECURRING"
      responses:
        200:
          description: "Sucessfully request"
        400:
          description: "Bad request"
        404:
          description: "Fee not found for the given combination"
  /v2/fee/drn/{drn}/bin/{bin}/frequency/{frequency}:
    get:
      tags:
      - "v2:fee"
      summary: "Get Applicable fees for the payment"
      description: "Returns applicable fees for the payment transaction. <br>Return\
        \ infortion contains<br> - CARD SCHEME of BIN<br>- Biller Surcharge and/or\
        \ Fee applicable (given DRN and BIN details & frequency)<br>- If the card\
        \ is international or domestic<br><h4>Exceptions</h4><br/><table class='fullwidth'><thead><th>Code</th><th>Description</th></thead><tbody><tr><td\
        \ width='15%' class='code'>400510</td><td>DRN is not valid DRN - [DRN]</td></tr><tr><td\
        \ width='15%' class='code'>400511</td><td>Biller Account could not be resolved\
        \ for DRN - [DRN] </td></tr><tr><td width='15%' class='code'>400512</td><td>Biller\
        \ Account cannot accept payment, bill account - [Account] & DRN - [DRN]</td></tr></tbody></table>"
      operationId: "findFeeByDrn"
      produces:
      - "application/json"
      parameters:
      - name: "drn"
        in: "path"
        description: "DEFT Reference Number"
        required: true
        type: "string"
      - name: "bin"
        in: "path"
        description: "Card BIN"
        required: true
        type: "string"
      - name: "frequency"
        in: "path"
        description: "Frequency of the payment, values can be ONE_OFF or RECURRING"
        required: true
        type: "string"
        enum:
        - "ONE_OFF"
        - "RECURRING"
      responses:
        200:
          description: "Sucessfully request"
        400:
          description: "Bad request"
        404:
          description: "Fee not found for the given combination"
  /v2/industry/list:
    get:
      tags:
      - "v2:industry"
      summary: "Return a list of active industries."
      description: "This operation is for retrieving a list of active industries."
      operationId: "getIndustryList"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/IndustryDetails"
  /v2/message/list:
    get:
      tags:
      - "v2:message"
      summary: "List all messages"
      description: "DEFT pseudo client messages"
      operationId: "search"
      produces:
      - "application/json"
      parameters:
      - name: "user-type"
        in: "query"
        description: "User type"
        required: true
        type: "string"
        enum:
        - "MGL"
        - "BILLER"
        - "PAYER"
        - "API"
      - name: "device"
        in: "query"
        description: "Device"
        required: false
        type: "string"
        default: "DESKTOP"
        enum:
        - "DESKTOP"
        - "TABLET"
        - "MOBILE"
      - name: "locale"
        in: "query"
        description: "Locale"
        required: false
        type: "string"
        default: "en"
      - name: "type"
        in: "query"
        required: false
        type: "string"
        enum:
        - "ACCESS_ERROR"
        - "REQUEST_ERROR"
        - "LOGIC_ERROR"
        - "SYSTEM_ERROR"
        - "USER_MESSAGE"
        - "REFUND_ERROR"
        - "PAYMENT_METHOD_ERROR"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MessageDto"
  /v2/message/search:
    post:
      tags:
      - "v2:message"
      summary: "Message"
      description: "DEFT pseudo client messages"
      operationId: "findById"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/MessageRequestDto"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/MessageDto"
  /v2/mgl-user:
    post:
      tags:
      - "v2:mgl-user"
      summary: "Create a MGL user"
      description: "This operation is for creating a MGL user."
      operationId: "create"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/MglUserCreateRequest"
      responses:
        201:
          description: "User added"
        400:
          description: "Bad request"
  /v2/mgl-user/search:
    post:
      tags:
      - "v2:mgl-user"
      summary: "Search for MGL Users"
      description: "This operation is for searching MGL users."
      operationId: "search"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/UserSearchCriteria"
      responses:
        200:
          description: "User details retrieved"
        400:
          description: "Bad request"
  /v2/mgl-user/{id}:
    get:
      tags:
      - "v2:mgl-user"
      summary: "Return an MGL user from id"
      description: "This operation is for retrieving user details for MGL user."
      operationId: "getMglUser"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Record Identifier"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      responses:
        200:
          description: "User details retrieved"
        404:
          description: "Could not find user"
    put:
      tags:
      - "v2:mgl-user"
      summary: "Update MGL user details"
      description: "This operation is for modifying user details for a MGL user."
      operationId: "updateMglUser"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Record Identifier"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/MglUserUpdateRequest"
      responses:
        400:
          description: "Bad request"
        204:
          description: "User details updated"
        404:
          description: "Invalid user"
  /v2/mgl-user/{id}/activate:
    post:
      tags:
      - "v2:mgl-user"
      summary: "Activate MGL user from id"
      description: "This operation is for activating a MGL user."
      operationId: "activateMglUser"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Record Identifier"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      responses:
        204:
          description: "User activated"
        404:
          description: "Invalid user"
  /v2/mgl-user/{id}/deactivate:
    post:
      tags:
      - "v2:mgl-user"
      summary: "Deactivate MGL user from id"
      description: "This operation is for deactivating a MGL user."
      operationId: "deactivateMglUser"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Record Identifier"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      responses:
        204:
          description: "User deactivated"
        404:
          description: "Invalid user"
  /v2/mgl-user/{id}/role/{roleId}:
    post:
      tags:
      - "v2:mgl-user"
      summary: "Modify role for MGL user"
      description: "This operation is for updating a given user role."
      operationId: "updateRole"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "User Record Identifier"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      - name: "roleId"
        in: "path"
        description: "Role Record Identifier"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      responses:
        204:
          description: "User role updated"
        404:
          description: "Invalid user or role"
  /v2/office-location:
    get:
      tags:
      - "v2:office-location"
      summary: "Return all office locations"
      description: "This operation is for retrieving all the office locations."
      operationId: "getOfficeLocations"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/OfficeDto"
  /v2/payer:
    get:
      tags:
      - "v2:payer"
      summary: "Get registered payers"
      description: ""
      operationId: "getPayers"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        minimum: 0.0
        format: "int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        minimum: 0.0
        format: "int32"
      - name: "order"
        in: "query"
        required: false
        type: "string"
        enum:
        - "ASC"
        - "DESC"
      - name: "orderBy"
        in: "query"
        required: false
        type: "string"
      - name: "drn"
        in: "query"
        required: false
        type: "string"
      - name: "firstName"
        in: "query"
        required: false
        type: "string"
      - name: "lastName"
        in: "query"
        required: false
        type: "string"
      - name: "email"
        in: "query"
        required: false
        type: "string"
      - name: "contactNumber"
        in: "query"
        required: false
        type: "string"
      - name: "cardBin"
        in: "query"
        required: false
        type: "string"
      - name: "cardLast4"
        in: "query"
        required: false
        type: "string"
      - name: "cardHolder"
        in: "query"
        required: false
        type: "string"
      - name: "bsb"
        in: "query"
        required: false
        type: "string"
      - name: "bankAccountNumber"
        in: "query"
        required: false
        type: "string"
      - name: "bankAccountName"
        in: "query"
        required: false
        type: "string"
      - name: "status"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "MIGRATION_READY"
          - "SELF_REGISTRATION_STARTED"
          - "BILLER_REGISTRATION_STARTED"
          - "MIGRATION_STARTED"
          - "SELF_REGISTRATION_COMPLETE_DETAILS"
          - "BILLER_REGISTRATION_CONFIRM_DETAILS"
          - "MIGRATION_CONFIRM_DETAILS"
          - "ACTIVE"
          - "INACTIVE"
        collectionFormat: "multi"
      responses:
        200:
          description: "successful search"
          schema:
            $ref: "#/definitions/PayerSearchResult"
        400:
          description: "Request contains errors"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ErrorValue"
        403:
          description: "not authorized"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ErrorValue"
    post:
      tags:
      - "v2:payer"
      summary: "Create a Payer"
      description: "This operation is to create a Payer. <br>Any authenticated user\
        \ can create a Payer but for the authenticated username only.<br>TODO - implement\
        \ security once API infrastructure is in place."
      operationId: "create"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PayerCreateRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayerResponseDto"
        201:
          description: "User added"
        400:
          description: "Bad request"
  /v2/payer/enquiry:
    post:
      tags:
      - "v2:payer"
      summary: "Payer enquiry email notification"
      description: ""
      operationId: "payerEnquiry"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PayerEnquiryRequest"
      responses:
        400:
          description: "Bad request"
        204:
          description: "Email notification successful"
  /v2/payer/migration-ready:
    get:
      tags:
      - "v2:payer"
      summary: "Is user ready for migration?"
      description: "This operation checks if the payer is ready for migration"
      operationId: "migrationReady"
      produces:
      - "application/json"
      parameters:
      - name: "email"
        in: "query"
        description: "Payer's email to determine"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/MigrationReadyResponse"
  /v2/payer/password:
    post:
      tags:
      - "v2:payer"
      summary: "Resets payers password"
      description: ""
      operationId: "resetPassword"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/ResetPasswordRequest"
      responses:
        400:
          description: "Bad request"
        204:
          description: "Password reset successful"
  /v2/payer/{id}:
    get:
      tags:
      - "v2:payer"
      summary: "Retrieve a Payer"
      description: "This operation is to retrieve Payer details. <br>Any authenticated\
        \ user can retrieve a Payer but for the authenticated username only.<br>TODO\
        \ - implement security once API infrastructure is in place."
      operationId: "retrieve"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayerResponseDto"
        201:
          description: "User added"
        400:
          description: "Bad request"
    put:
      tags:
      - "v2:payer"
      summary: "Updates a Payer (for browser compatibility only)"
      description: "This operation is to update a Payer. <br>Any authenticated user\
        \ can create a Payer but for the authenticated username only.<br>TODO - implement\
        \ security once API infrastructure is in place."
      operationId: "updateCompatibility"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PayerUpdateRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayerResponseDto"
        201:
          description: "User added"
        400:
          description: "Bad request"
    delete:
      tags:
      - "v2:payer"
      summary: "Remove the payer and associated linkages."
      description: ""
      operationId: "deletePayer"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      responses:
        400:
          description: "Unable to remove payer."
        204:
          description: "Payer removed successfully."
    patch:
      tags:
      - "v2:payer"
      summary: "Updates a Payer"
      description: "This operation is to update a Payer. <br>Any authenticated user\
        \ can create a Payer but for the authenticated username only.<br>TODO - implement\
        \ security once API infrastructure is in place."
      operationId: "update"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PayerUpdateRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayerResponseDto"
        201:
          description: "User added"
        400:
          description: "Bad request"
  /v2/payer/{id}/drn:
    get:
      tags:
      - "v2:payer"
      summary: "Get Payer to DRN associations"
      description: "Returns a list of the links between a Payer and DRNs. <br>The\
        \ list will consist of all active associations. <br>TODO - implement Payer\
        \ security once API infrastructure is in place."
      operationId: "getPayerDrnLinks"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        minimum: 0.0
        format: "int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        minimum: 0.0
        format: "int32"
      - name: "order"
        in: "query"
        required: false
        type: "string"
        enum:
        - "ASC"
        - "DESC"
      - name: "orderBy"
        in: "query"
        required: false
        type: "string"
      - name: "payerId"
        in: "query"
        required: true
        type: "integer"
        minimum: 1.0
        format: "int64"
      - name: "includeInactive"
        in: "query"
        required: false
        type: "boolean"
      responses:
        200:
          description: "Sucessfully request"
          schema:
            $ref: "#/definitions/PayerDrnSummary"
        400:
          description: "Bad request - Payer doesn't exist"
    post:
      tags:
      - "v2:payer"
      summary: "Associate a DRN to a payer"
      description: "<ul><li>400510: DRN is not valid </li><li>6000041: IVR Security\
        \ code already in use </li><li>400511: Biller Account could not be resolved\
        \ for DRN - [DRN] </li></ul>"
      operationId: "associateDrnToPayer"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PayerDrnRequest"
      responses:
        200:
          description: "DRN association was successful"
          schema:
            $ref: "#/definitions/PayerDrnDto"
        400:
          description: "Bad request"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ErrorValue"
    put:
      tags:
      - "v2:payer"
      summary: "(This has been deprecated. Please use the POST/PUT/DELETE /{payerId}/drn/{drn}\
        \ instead) Modify Payer to DRN and IVR code associations"
      description: "Adds or removes the links between a Payer and DRNs. <br>The request\
        \ can modify the link for multiple DRNs at the same time. <br>Note, adding\
        \ a link takes precedence over removal - if a DRN is both attempted added\
        \ and removed in this request the DRN will be added.<br>TODO - implement security\
        \ once API infrastructure is in place.<h4>Exceptions</h4><br/><table class='fullwidth'><thead><th>Code</th><th>Description</th></thead><tbody><tr><td\
        \ width='15%' class='code'>400510</td><td>DRN is not valid DRN - [DRN]</td></tr><tr><td\
        \ width='15%' class='code'>400511</td><td>Biller Account could not be resolved\
        \ for DRN - [DRN] </td></tr></tbody></table>"
      operationId: "modifyPayerDrnLinks"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PayerDrnModifyRequest"
      responses:
        200:
          description: "Update successful"
        400:
          description: "Bad request"
      deprecated: true
  /v2/payer/{id}/drn/{drn}:
    put:
      tags:
      - "v2:payer"
      summary: "Update a payer's DRN association"
      description: "<ul> Error Codes:<li>400105: DRN not associated to payer</li><li>6000041:\
        \ IVR Security code already in use </li></ul>"
      operationId: "updatePayerDrn"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      - name: "drn"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PayerDrnRequest"
      responses:
        200:
          description: "Update successful"
        400:
          description: "Bad request"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ErrorValue"
    delete:
      tags:
      - "v2:payer"
      summary: "Associate a DRN to a payer"
      description: "<ul><li>400105, DRN not associated to payer</li></ul>"
      operationId: "dissociateDrnFromPayer"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      - name: "drn"
        in: "path"
        required: true
        type: "string"
      responses:
        201:
          description: "DRN association was successful"
        400:
          description: "Bad request"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ErrorValue"
  /v2/payment-schedule:
    get:
      tags:
      - "v2:Payment Schedule"
      summary: "Get Payer's Scheduled Payments"
      description: "<ul><li>Based from the given JWT header token, find and return\
        \ a list of payer's scheduled payments.</li><li>The following fields <b>totalAmount,\
        \ fee, surchargeAmount, cardDetails, bankAccountDetails<b> are only available\
        \ for PAYER_PORTAL channel or ADMIN_PORTAL when payerId is provided</li></ul>"
      operationId: "getPayerPaymentSchedules"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        minimum: 0.0
        format: "int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        minimum: 0.0
        format: "int32"
      - name: "order"
        in: "query"
        required: false
        type: "string"
        enum:
        - "ASC"
        - "DESC"
      - name: "orderBy"
        in: "query"
        required: false
        type: "string"
      - name: "payerId"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
      - name: "rootBillerId"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
      - name: "status"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "ACTIVE"
          - "CANCELLED"
          - "COMPLETE"
          - "EXECUTING"
        collectionFormat: "multi"
      - name: "id"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
      - name: "drn"
        in: "query"
        required: false
        type: "string"
      - name: "minAmount"
        in: "query"
        required: false
        type: "number"
      - name: "maxAMount"
        in: "query"
        required: false
        type: "number"
      - name: "frequency"
        in: "query"
        required: false
        type: "string"
        enum:
        - "ONE_OFF"
        - "RECURRING"
      - name: "interval"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "D"
          - "W"
          - "F"
          - "M"
          - "Q"
          - "Y"
        collectionFormat: "multi"
      - name: "channel"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "INTERNET"
          - "IVR"
          - "BPAY"
          - "AUSTRALIA_POST"
          - "LOCKED_BAG"
          - "PAYER_PORTAL_ONE_TIME"
          - "PAYER_PORTAL"
          - "BILLER_PORTAL"
          - "BILLER_PORTAL_VIRTUAL_TERMINAL"
          - "ADMIN_PORTAL"
          - "API"
          - "ECOM_TRANSPARENT_REDIRECT"
          - "ECOM_IFRAME"
          - "ECOM_HOSTED_PAYMENT_PAGE"
          - "API_EBIX"
          - "API_EDGEWISE"
          - "API_GALLAGHERS"
          - "API_GENKAN"
          - "API_RAW_IDEAS"
          - "AUCTION_PAY"
        collectionFormat: "multi"
      - name: "cardBin"
        in: "query"
        required: false
        type: "string"
      - name: "cardLast4"
        in: "query"
        required: false
        type: "string"
      - name: "cardHolder"
        in: "query"
        required: false
        type: "string"
      - name: "bankBsb"
        in: "query"
        required: false
        type: "string"
      - name: "bankAccountNumber"
        in: "query"
        required: false
        type: "string"
      - name: "bankAccountName"
        in: "query"
        required: false
        type: "string"
      - name: "minNextPaymentDate"
        in: "query"
        required: false
        type: "string"
        format: "date-time"
      - name: "maxNextPaymentDate"
        in: "query"
        required: false
        type: "string"
        format: "date-time"
      - name: "billerId"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PaymentScheduleSearchResult"
    post:
      tags:
      - "v2:Payment Schedule"
      summary: "Create schedule transaction"
      description: "Create a schedule transaction"
      operationId: "createPaymentSchedule"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PaymentScheduleCreateRequest"
      - name: "rootBillerId"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetPaymentScheduleResponse"
  /v2/payment-schedule/execute/{id}:
    post:
      tags:
      - "v2:Payment Schedule"
      summary: "Executes a scheduled payment identified by the parameter id"
      description: ""
      operationId: "executePayment"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      - name: "date"
        in: "query"
        required: true
        type: "string"
      responses:
        200:
          description: "Completed"
          schema:
            $ref: "#/definitions/PaymentExecutionResponse"
        400:
          description: "failed execution (can retry)"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ErrorValue"
  /v2/payment-schedule/{id}:
    get:
      tags:
      - "v2:Payment Schedule"
      summary: "Get schedule transaction"
      description: "Get a schedule transaction"
      operationId: "getPaymentSchedule"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      - name: "rootBillerId"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetPaymentScheduleResponse"
    put:
      tags:
      - "v2:Payment Schedule"
      summary: "Update schedule transaction"
      description: "Update a schedule transaction"
      operationId: "updatePaymentSchedule"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PaymentScheduleUpdateRequest"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      - name: "rootBillerId"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetPaymentScheduleResponse"
    delete:
      tags:
      - "v2:Payment Schedule"
      summary: "Delete a payment schedule"
      description: ""
      operationId: "deletePaymentSchedule"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - name: "rootBillerId"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PaymentScheduleResponse"
        400:
          description: "invalid request"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ErrorValue"
  /v2/permission/list:
    get:
      tags:
      - "v2:permission"
      summary: "Return a list of permissions based on the type parameter."
      description: "This operation is for showing a list of permissions associated\
        \ to a user type."
      operationId: "list"
      produces:
      - "application/json"
      parameters:
      - name: "type"
        in: "query"
        description: "One of user type - MGL, BILLER etc"
        required: true
        type: "string"
        default: "MGL"
        enum:
        - "MGL"
        - "BILLER"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PermissionDetailedDto"
  /v2/role:
    post:
      tags:
      - "v2:role"
      summary: "Create a new user role."
      description: "This operation is for creating a new role for a user type with\
        \ given permissions."
      operationId: "create"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RoleCreateDto"
      responses:
        default:
          description: "successful operation"
  /v2/role/list:
    get:
      tags:
      - "v2:role"
      summary: "Return a list of user roles."
      description: "This operation is for retrieving a list of roles for a given user\
        \ type."
      operationId: "getRoleList"
      produces:
      - "application/json"
      parameters:
      - name: "type"
        in: "query"
        description: "Role type"
        required: false
        type: "string"
        default: "ALL"
        enum:
        - "ALL"
        - "MGL"
        - "BILLER"
      - name: "include-inactive"
        in: "query"
        description: "Include inactive roles flag"
        required: false
        type: "boolean"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Role"
  /v2/role/{id}:
    get:
      tags:
      - "v2:role"
      summary: "Return details of a user role."
      description: "This operation is for retrieving details of a user role."
      operationId: "getRole"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Role Identifier"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/RoleDetailedDto"
    put:
      tags:
      - "v2:role"
      summary: "Modify an existing user role."
      description: ""
      operationId: "modify"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RoleModifyDto"
      responses:
        default:
          description: "successful operation"
  /v2/role/{id}/activate:
    post:
      tags:
      - "v2:role"
      summary: "Activate a MGL or Biller user role."
      description: "This operation is for activating a MGL or Biller user role."
      operationId: "activate"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      responses:
        default:
          description: "successful operation"
  /v2/role/{id}/deactivate:
    post:
      tags:
      - "v2:role"
      summary: "Deactivate a MGL or Biller user role."
      description: "This operation is for deactivating a MGL or Biller user role."
      operationId: "deactivate"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      responses:
        default:
          description: "successful operation"
  /v2/transaction:
    get:
      tags:
      - "v2:transaction"
      summary: "Search for Transactions"
      description: "This operation to search billers based on the following query\
        \ parameters - id, name, status, type and more"
      operationId: "getTransactions"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        minimum: 0.0
        format: "int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        minimum: 0.0
        format: "int32"
      - name: "order"
        in: "query"
        required: false
        type: "string"
        enum:
        - "ASC"
        - "DESC"
      - name: "orderBy"
        in: "query"
        required: false
        type: "string"
      - name: "payerIds"
        in: "query"
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int64"
        collectionFormat: "multi"
      - name: "drn"
        in: "query"
        required: false
        type: "string"
      - name: "minAmount"
        in: "query"
        required: false
        type: "number"
      - name: "maxAmount"
        in: "query"
        required: false
        type: "number"
      - name: "minTotalAmount"
        in: "query"
        required: false
        type: "number"
      - name: "maxTotalAmount"
        in: "query"
        required: false
        type: "number"
      - name: "fromDateTime"
        in: "query"
        required: false
        type: "string"
      - name: "toDateTime"
        in: "query"
        required: false
        type: "string"
      - name: "receiptNumber"
        in: "query"
        required: false
        type: "string"
      - name: "billerId"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
      - name: "cardFirstSixDigits"
        in: "query"
        required: false
        type: "string"
      - name: "cardLastFourDigits"
        in: "query"
        required: false
        type: "string"
      - name: "bsb"
        in: "query"
        required: false
        type: "string"
      - name: "cardHolderName"
        in: "query"
        required: false
        type: "string"
      - name: "accountNumber"
        in: "query"
        required: false
        type: "string"
      - name: "paymentMethod"
        in: "query"
        required: false
        type: "string"
      - name: "cardScheme"
        in: "query"
        description: "Valid Card Schemes:VISA, MASTERCARD, AMERICAN EXPRESS, DINERS\
          \ CLUB INTERNATIONAL"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "channel"
        in: "query"
        description: "Valid channels:IVR,BPAY,API,PAYER_PORTAL_ONE_TIME,PAYER_PORTAL,AUCTION_PAY"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "messageType"
        in: "query"
        required: false
        type: "string"
      - name: "status"
        in: "query"
        description: "Valid transaction status: APPROVED, ERROR, DECLINED, DISHONOURED,\
          \ PROCESSED, SUBMITTED, CLEARED, PENDING, INITIAL, INPROGRESS, REFUNDED,\
          \ PARTIALLY_REFUNDED"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "scheduledPaymentOnly"
        in: "query"
        required: false
        type: "boolean"
      - name: "scheduleId"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
      - name: "includeInactiveDrns"
        in: "query"
        required: false
        type: "boolean"
      - name: "dtrn"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TransactionSearchResponse"
  /v2/transaction/amount:
    post:
      tags:
      - "v2:transaction"
      summary: "Amount calculation for the transaction"
      description: "Retrieves fee/Surcharge rate for the transaction and does a caluclation\
        \ for amount and total amount"
      operationId: "calculateAmount"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/TransactionAmountCalcRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/TransactionAmountCalcResponse"
  /v2/transaction/card:
    post:
      tags:
      - "v2:transaction"
      summary: "Create Card Transaction"
      description: "This operation to create a Card Transaction (in a INPROGRESS state).<br>This\
        \ is the first step in a two step process (the second step is to confirm the\
        \ transaction) with the purpose of creating a transaction representing a card\
        \ transaction. The Transaction created will not apear in any subsequent get\
        \ or search request until it has transitioned to a non-pending state.<h4>Exceptions</h4><br/><table\
        \ class='fullwidth'><thead><th>Code</th><th>Description</th></thead><tbody><tr><td\
        \ width='15%' class='code'>400030</td><td>The field [Amount] [Value] must\
        \ be provided with a precision of no more than 2 decimals</td></tr><tr><td\
        \ width='15%' class='code'>400510</td><td>DRN is not valid DRN - [DRN]</td></tr><tr><td\
        \ width='15%' class='code'>400511</td><td>Biller Account could not be resolved\
        \ for DRN - [DRN] </td></tr><tr><td width='15%' class='code'>400512</td><td>Biller\
        \ Account cannot accept payment, bill account - [Account] & DRN - [DRN]</td></tr><tr><td\
        \ width='15%' class='code'>400520</td><td>Unsupported Channel [Channel] for\
        \ transaction type [Type]</td></tr><tr><td width='15%' class='code'>400904</td><td>Captcha\
        \ validation failed for the transaction this is not applicable for API channel</td></tr></tbody></table>"
      operationId: "createAndValidateCardTransaction"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Card Create and validate Transaction Request"
        required: false
        schema:
          $ref: "#/definitions/CreateCardTransactionRequestDtoV2"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/CreateCardTransactionResponseDto"
        201:
          description: "Transaction created"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/ErrorValue"
  /v2/transaction/card/confirmation:
    post:
      tags:
      - "v2:transaction"
      summary: "Confirm Card Transaction"
      description: "This operation to confirm a Card Transaction.<br>This is the third\
        \ step in a three step process (the first step is to create the transaction\
        \ in a pending state, the second step is to validate the transaction) to create\
        \ a Card Transaction.<br>The operation is intended to be called from a Card\
        \ Processing System to confirm the Card Transaction after processing it.The\
        \ Card Processing System should call this with the outcome of the transaction,\
        \ i.e. after it has been accepted or declined. The Card Processing System\
        \ should consider this a notification only (i.e not act on the response)<h4>Exceptions</h4><br/><table\
        \ class='fullwidth'><thead><th>Code</th><th>Description</th></thead><tr><td\
        \ width='15%' class='code'>404001</td><td>Transaction not found</td></tr><tbody></tbody></table>"
      operationId: "confirmCardTransactionV2"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Confirm Card Transaction Request"
        required: false
        schema:
          $ref: "#/definitions/ConfirmCardTransactionRequestDtoV2"
      responses:
        200:
          description: "Transaction validated"
        400:
          description: "Validation error"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ErrorValue"
        500:
          description: "System error"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ErrorValue"
        404:
          description: "Transaction not found"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ErrorValue"
  /v2/transaction/card/refund:
    post:
      tags:
      - "v2:transaction"
      summary: "Refund Card Transaction"
      description: "This operation to refund a Card Transaction.<br> Wrapper service\
        \ that calls the card processor and updates the transaction in the Deft system.<br><h4>Exceptions</h4><br/><table\
        \ class='fullwidth'><thead><th>Code</th><th>Description</th></thead><tbody><tr><td\
        \ width='15%' class='code'>400030</td><td>The field [Amount] [Value] must\
        \ be provided with a precision of no more than 2 decimals</td></tr><tr><td\
        \ width='15%' class='code'>400901</td><td>Transaction in an invalid state\
        \ [TransactionState]</td></tr><tr><td width='15%' class='code'>400910</td><td>The\
        \ transaction with DTRN [DTRN] has a message type [Type] not supported for\
        \ refunding</td></tr><tr><td width='15%' class='code'>400911</td><td>No associated\
        \ [FEE|SURCHARGE] transaction to refund could be found for Card Transaction\
        \ with DTRN [DTRN] </td></tr><tr><td width='15%' class='code'>400912</td><td>The\
        \ [FEE|SURCHARGE|Main Amount] has already been refunded</td></tr><tr><td width='15%'\
        \ class='code'>400914</td><td>Refund amount exceeds amount left to refund</td></tr><tr><td\
        \ width='15%' class='code'>400915</td><td>A transaction can't be refunded\
        \ on the same day it is submitted</td></tr></tbody></table>"
      operationId: "refundCardTransaction"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Refund Card Transaction Request"
        required: false
        schema:
          $ref: "#/definitions/RefundCardTransactionRequestDto"
      responses:
        200:
          description: "Transaction validated"
        400:
          description: "Validation error"
          schema:
            $ref: "#/definitions/ErrorContainerDto"
        500:
          description: "System error"
        404:
          description: "Transaction not found"
          schema:
            $ref: "#/definitions/ErrorContainerDto"
  /v2/transaction/card/validation:
    post:
      tags:
      - "v2:transaction"
      summary: "Validate Card Transaction"
      description: "This operation to validate a Card Transaction.<br>This is the\
        \ second step in a three step process (the first step is to create the transaction\
        \ in a pending state, the third step is to confirm the transaction) to create\
        \ a Card Transaction.<br>The operation is intended to be called from a Card\
        \ Processing System to validate the Card Transaction before processing it.The\
        \ Card Processing System must only process the transaction if this validation\
        \ is successful. If the validation fails the Card Processing System should\
        \ return the error code and message from the response of the validation (if\
        \ there are more than one error present the first should be returned)<h4>Exceptions</h4><br/><table\
        \ class='fullwidth'><thead><th>Code</th><th>Description</th></thead><tr><td\
        \ width='15%' class='code'>404001</td><td>Transaction not found</td></tr><tr><td\
        \ width='15%' class='code'>400900</td><td>The transaction type in the request\
        \ is unsupported </td></tr><tr><td width='15%' class='code'>400901</td><td>The\
        \ transaction is in a status invalid for this operation</td></tr><tr><td width='15%'\
        \ class='code'>400902</td><td>The use of the DTRN for payment has exceeded\
        \ the allowed time to live</td></tr><tr><td width='15%' class='code'>400903</td><td>The\
        \ parameter does not match the original</td></tr><tbody></tbody></table>"
      operationId: "validateCardTransaction"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Validate Card Transaction Request"
        required: false
        schema:
          $ref: "#/definitions/ValidateCardTransactionRequestDto"
      responses:
        200:
          description: "Transaction validated"
        400:
          description: "Validation error"
          schema:
            $ref: "#/definitions/ErrorContainerDto"
        500:
          description: "System error"
        404:
          description: "Transaction not found"
          schema:
            $ref: "#/definitions/ErrorContainerDto"
  /v2/transaction/datetime/dtrn/{dtrn}:
    get:
      tags:
      - "v2:transaction"
      summary: "Datetime query for a transaction"
      description: "This operation to return date time for a existing transaction,\
        \ by DTRN"
      operationId: "getDateTimeForTransaction"
      produces:
      - "application/json"
      parameters:
      - name: "dtrn"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/TransactionDateTimeDto"
        404:
          description: "Transaction not found"
          schema:
            $ref: "#/definitions/ErrorContainerDto"
  /v2/transaction/direct-debit:
    post:
      tags:
      - "v2:transaction"
      summary: "Create Direct Debit Transaction"
      description: "This operation creates a Debit Transaction (in a PENDING state).<br><b>Exceptions</b><ul><li>400030</td><td>The\
        \ field [Amount] [Value] must be provided with a precision of no more than\
        \ 2 decimals</li><li>400510</td><td>DRN is not valid DRN - [DRN]</li><li>400511</td><td>Biller\
        \ Account could not be resolved for DRN - [DRN] </li><li>400512</td><td>Biller\
        \ Account cannot accept payment, bill account - [Account] & DRN - [DRN]</li><li>400520</td><td>Unsupported\
        \ Channel [Channel] for transaction type [Type]</li></ul>"
      operationId: "createAndValidateDebitTransaction"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Card Create and validate Transaction Request"
        required: false
        schema:
          $ref: "#/definitions/CreateDebitTransactionRequest"
      - name: "rootBillerId"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/CreateCardTransactionResponseDto"
        201:
          description: "Transaction created"
        400:
          description: "Bad request"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ErrorValue"
  /v2/transaction/receipt:
    post:
      tags:
      - "v2:transaction"
      summary: "Send email receipt for a transaction"
      description: "This operation to sends a email receipt for the existing transaction"
      operationId: "emailReceipt"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/TransactionEmailRequestDto"
      responses:
        default:
          description: "successful operation"
  /v2/transaction/search:
    post:
      tags:
      - "v2:transaction"
      summary: "Search for Transactions"
      description: "This operation to search billers based on the following parameters\
        \ - id, name, status and type"
      operationId: "findTransactions"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/TransactionSearchRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TransactionSearchResponse"
  /v2/transaction/summary/fromdate/{fromdate}/todate/{todate}:
    post:
      tags:
      - "v2:transaction"
      summary: "Get transaction summary"
      description: "This operation returns the count and total, grouped by type for\
        \ all transactions within the specified date range. The result set without\
        \ a type is the grand total of all transactions."
      operationId: "summary"
      produces:
      - "application/json"
      parameters:
      - name: "from-date"
        in: "path"
        description: "from transaction Date"
        required: true
        type: "string"
      - name: "to-date"
        in: "path"
        description: "to transaction Date"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TransactionSummary"
  /v2/transaction/surcharge/calculation:
    post:
      tags:
      - "v2:transaction"
      summary: "Get surcharge calculation"
      description: "This operation returns the surcharge and total amount based on\
        \ input surcharge percentage and amount "
      operationId: "calculateSurcharge"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Amount and Surcharge Percentage"
        required: false
        schema:
          $ref: "#/definitions/CalculateSurchargeRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/CalculateSurchargeResponse"
  /v2/transaction/total-amount/calculation:
    post:
      tags:
      - "v2:transaction"
      summary: "Total Amount calculation with fee and surcharge both for the transaction"
      description: "Fee & Surcharge rate for the transaction and does a caluclation\
        \ for amount and total amount"
      operationId: "calculateTotalAmount"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/TransactionTotalAmountRequestDto"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/TransactionTotalAmountResponseDto"
  /v2/transaction/{dtrn}/autoCancel:
    post:
      tags:
      - "v2:transaction"
      summary: "Requests Automatic/Asynchronous Card Payment cancellation"
      description: ""
      operationId: "sendAutomaticCardPaymentCancellation"
      produces:
      - "application/json"
      parameters:
      - name: "dtrn"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      - name: "RESOURCE_TOKEN"
        in: "header"
        required: false
        type: "string"
      responses:
        201:
          description: "Transaction cancellation request created, follow location\
            \ header to retrieve final transaction status"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ErrorValue"
        303:
          description: "Redirect to transaction status"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ErrorValue"
  /v2/transaction/{dtrn}/cancel:
    post:
      tags:
      - "v2:transaction"
      summary: "Requests Card Payment cancellation"
      description: ""
      operationId: "sendCardPaymentCancellation"
      produces:
      - "application/json"
      parameters:
      - name: "dtrn"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      responses:
        200:
          description: "Cancel success"
          schema:
            $ref: "#/definitions/SuccessResponse"
          headers: {}
        406:
          description: "Failed cancel"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ErrorValue"
          headers: {}
  /v2/transaction/{dtrn}/status:
    get:
      tags:
      - "v2:transaction"
      summary: "Requests card transaction completion status"
      description: ""
      operationId: "getTransactionStatus"
      produces:
      - "application/json"
      parameters:
      - name: "dtrn"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      - name: "_t"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Success payment response"
          schema:
            $ref: "#/definitions/SuccessResponse"
        400:
          description: "Failure payment response"
          schema:
            $ref: "#/definitions/FailureResponse"
  /v2/transaction/{id}:
    get:
      tags:
      - "v2:transaction"
      summary: "Return details of a transaction."
      description: "This operation is for retrieving the details of a transaction."
      operationId: "getTransactionDetails"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Transaction Identifier"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/TransactionDetailsResponseDto"
definitions:
  OfficeDto:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      officeName:
        type: "string"
  Address:
    type: "object"
    properties:
      country:
        type: "string"
      state:
        type: "string"
        enum:
        - "NSW"
        - "VIC"
        - "QLD"
        - "SA"
        - "NT"
        - "ACT"
        - "WA"
        - "TAS"
      suburb:
        type: "string"
      postCode:
        type: "string"
      streetLine1:
        type: "string"
      streetLine2:
        type: "string"
  CreateCardTransactionResponseDto:
    type: "object"
    required:
    - "dtrn"
    - "dynamicName"
    - "ecomIndicator"
    - "merchantId"
    - "method"
    - "receiptNumber"
    - "terminalId"
    properties:
      totalAmount:
        type: "number"
      surchargeAmount:
        type: "number"
      surchargeRate:
        type: "number"
      fee:
        type: "number"
      timestamp:
        type: "string"
        format: "date-time"
      drn:
        type: "string"
      crn:
        type: "integer"
        format: "int64"
      currencyCode:
        type: "string"
      dtrn:
        type: "integer"
        format: "int64"
        position: 10
        description: "Deft Reference Number (DRN)"
      receiptNumber:
        type: "string"
        position: 12
        description: "Receipt Number of the transaction"
      merchantId:
        type: "string"
        position: 15
        description: "MerchantID - to be used in request to card processing system"
      terminalId:
        type: "string"
        position: 17
        description: "TerminaltID - to be used in request to card processing system"
      dynamicName:
        type: "string"
        position: 20
        description: "Dynamic name - to be used in request to card processing system"
      ecomIndicator:
        type: "string"
        position: 25
        description: "EcomIndicator - to be used in request to card processing system"
      method:
        type: "string"
        position: 30
        description: "Method - to be used in request to card processing system"
  AuditUserDto:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      userName:
        type: "string"
      displayName:
        type: "string"
  MglUserDetails:
    type: "object"
    required:
    - "firstName"
    - "lastName"
    - "userName"
    properties:
      emailAddress:
        type: "string"
        minLength: 1
        maxLength: 255
        pattern: "([^\\s@]+@[^@\\s]+\\.[^@\\s]+)([a-zA-Z0-9])"
      mobileNumber:
        type: "string"
        minLength: 10
        maxLength: 10
        pattern: "04\\d{8}"
      id:
        type: "integer"
        format: "int64"
      lastLogin:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        enum:
        - "INACTIVE"
        - "ACTIVE"
      officeLocation:
        $ref: "#/definitions/OfficeDto"
      role:
        $ref: "#/definitions/Role"
      userName:
        type: "string"
        position: 1
        description: "Email address"
      firstName:
        type: "string"
        position: 5
        description: "First name"
        minLength: 1
        maxLength: 32
        pattern: "^(?!\\s)([a-zA-Z0-9\\s-'])+(?<!\\s)"
      lastName:
        type: "string"
        position: 10
        description: "Last name"
        minLength: 1
        maxLength: 32
        pattern: "^(?!\\s)([a-zA-Z0-9\\s-'])+(?<!\\s)"
      landLine:
        type: "string"
        position: 15
        description: "Contact phone number"
        minLength: 10
        maxLength: 10
        pattern: "0[2378]\\d{8}"
  OriginalTransactionDto:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      transactionDate:
        type: "string"
        format: "date-time"
      settlementDate:
        type: "string"
        format: "date-time"
      merchantId:
        type: "string"
      terminalId:
        type: "string"
      dynamicName:
        type: "string"
      paymentMethod:
        type: "string"
        enum:
        - "CARD"
        - "DIRECT_DEBIT"
        - "BPAY"
        - "AUSTRALIA_POST"
        - "LOCKED_BAG"
        - "FEE"
        - "SURCHARGE"
        - "REFUND"
      messageType:
        type: "string"
        enum:
        - "PRE_AUTH"
        - "CAPTURE"
        - "ONE_STEP"
        - "CANCEL"
        - "AUTO_CANCEL"
        - "REFUND"
      receiptNumber:
        type: "string"
      transactionAmount:
        type: "number"
      surcharge:
        type: "number"
      surchargeRate:
        type: "number"
      payerDrnNickname:
        type: "string"
      scheduleId:
        type: "integer"
        format: "int64"
      fee:
        type: "number"
      totalAmount:
        type: "number"
      status:
        type: "string"
        enum:
        - "APPROVED"
        - "ERROR"
        - "DECLINED"
        - "DISHONOURED"
        - "PROCESSED"
        - "SUBMITTED"
        - "PENDING"
        - "INITIAL"
        - "INPROGRESS"
        - "REFUNDED"
        - "PARTIALLY_REFUNDED"
        - "CLEARED"
        - "CANCELLED"
      channel:
        type: "string"
        enum:
        - "INTERNET"
        - "IVR"
        - "BPAY"
        - "AUSTRALIA_POST"
        - "LOCKED_BAG"
        - "PAYER_PORTAL_ONE_TIME"
        - "PAYER_PORTAL"
        - "BILLER_PORTAL"
        - "BILLER_PORTAL_VIRTUAL_TERMINAL"
        - "ADMIN_PORTAL"
        - "API"
        - "ECOM_TRANSPARENT_REDIRECT"
        - "ECOM_IFRAME"
        - "ECOM_HOSTED_PAYMENT_PAGE"
        - "API_EBIX"
        - "API_EDGEWISE"
        - "API_GALLAGHERS"
        - "API_GENKAN"
        - "API_RAW_IDEAS"
        - "AUCTION_PAY"
      geteComIndicator:
        type: "string"
      currency:
        type: "string"
      getdTRN:
        type: "integer"
        format: "int64"
      processorRef:
        type: "string"
      actionHints:
        type: "array"
        items:
          type: "string"
          enum:
          - "REFUND"
          - "SEND_RECEIPT"
          - "CANCEL"
      stan:
        type: "string"
      errorCode:
        type: "string"
      errorDescription:
        type: "string"
      error:
        $ref: "#/definitions/ErrorValue"
      switchResponseCode:
        type: "string"
      switchResponseDescription:
        type: "string"
      paymentDetails:
        $ref: "#/definitions/PaymentDetailsDto"
      drn:
        type: "string"
      billerId:
        type: "integer"
        format: "int64"
      billerName:
        type: "string"
      paymentDescription:
        type: "string"
      recipientEmail:
        type: "string"
  RbacPermission:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      permission:
        $ref: "#/definitions/Permission"
      resourceType:
        type: "string"
      operation:
        type: "string"
  PaymentDescription:
    type: "object"
    properties:
      created:
        type: "string"
        format: "date-time"
      createdBy:
        type: "integer"
        format: "int64"
      updated:
        type: "string"
        format: "date-time"
      updatedBy:
        type: "integer"
        format: "int64"
      status:
        type: "string"
        enum:
        - "INACTIVE"
        - "ACTIVE"
      id:
        type: "integer"
        format: "int64"
      industryId:
        type: "integer"
        format: "int64"
      billerId:
        type: "integer"
        format: "int64"
      parent:
        $ref: "#/definitions/PaymentDescription"
      description:
        type: "string"
      children:
        type: "array"
        items:
          $ref: "#/definitions/PaymentDescription"
      active:
        type: "boolean"
        default: false
  BillerUserSearchRequestDto:
    type: "object"
    properties:
      userName:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      status:
        type: "string"
      pageInfo:
        $ref: "#/definitions/Paging"
  BankIdentificationNumberDto:
    type: "object"
    properties:
      issuingCountryISO3:
        type: "string"
      bin:
        type: "string"
        position: 10
        description: "Bank Identification Number"
      scheme:
        type: "string"
        position: 20
        description: "Card scheme (card brand)"
      organisation:
        type: "string"
        position: 30
        description: "Name of organisation"
      cardType:
        type: "string"
        position: 40
        description: "Type of card (e.g. CREDIT, DEBIT)"
      category:
        type: "string"
        position: 50
        description: "Card category (e.g. CLASSIC, PREMIER)"
  TransactionAmountCalcRequest:
    type: "object"
    required:
    - "amount"
    - "billerId"
    - "currencyCode"
    properties:
      amount:
        type: "number"
      billerId:
        type: "integer"
        format: "int64"
      cardBin:
        type: "string"
        minLength: 6
        maxLength: 6
        pattern: "([0-9])*"
      paymentFrequency:
        type: "string"
      channel:
        type: "string"
      rootBillerId:
        type: "integer"
        format: "int64"
      currencyCode:
        type: "string"
        minLength: 1
        maxLength: 3
        pattern: "([a-zA-Z0-9])*"
  TransactionDateTimeDto:
    type: "object"
    properties:
      transactionDateTime:
        type: "string"
        format: "date-time"
  Permission:
    type: "object"
    properties:
      created:
        type: "string"
        format: "date-time"
      createdBy:
        type: "integer"
        format: "int64"
      updated:
        type: "string"
        format: "date-time"
      updatedBy:
        type: "integer"
        format: "int64"
      status:
        type: "string"
        enum:
        - "INACTIVE"
        - "ACTIVE"
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      description:
        type: "string"
      userType:
        type: "string"
        enum:
        - "MGL"
        - "PAYER"
        - "BILLER"
        - "API"
        - "BATCH"
      rolePermissions:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/RolePermission"
      rbacPermissions:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/RbacPermission"
      active:
        type: "boolean"
        default: false
  BillerDto:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      type:
        type: "string"
        enum:
        - "GROUP_CUSTOMER"
        - "BUSINESS_CUSTOMER"
        - "FACILITY"
        - "ACCOUNT"
      name:
        type: "string"
      status:
        type: "string"
      accessible:
        type: "boolean"
        default: false
      drn:
        type: "string"
  Subscription:
    type: "object"
    properties:
      created:
        type: "string"
        format: "date-time"
      createdBy:
        type: "integer"
        format: "int64"
      updated:
        type: "string"
        format: "date-time"
      updatedBy:
        type: "integer"
        format: "int64"
      status:
        type: "string"
        enum:
        - "INACTIVE"
        - "ACTIVE"
      id:
        type: "integer"
        format: "int64"
      warning:
        type: "string"
      description:
        type: "string"
      name:
        type: "string"
      active:
        type: "boolean"
        default: false
  AuctionAddressDto:
    type: "object"
    required:
    - "postCode"
    - "state"
    - "suburb"
    properties:
      street:
        type: "string"
        minLength: 1
        maxLength: 99
      state:
        type: "string"
        position: 10
        description: "State; mandatory for an Australian address"
        enum:
        - "NSW"
        - "VIC"
        - "QLD"
        - "SA"
        - "NT"
        - "ACT"
        - "WA"
        - "TAS"
      suburb:
        type: "string"
        position: 15
        description: "Suburb; mandatory for an Australian address"
        minLength: 1
        maxLength: 64
        pattern: "([a-zA-Z0-9\\s'/,.-])*"
      postCode:
        type: "string"
        position: 20
        description: "Post code; mandatory for an Australian address"
        minLength: 4
        maxLength: 4
        pattern: "([0-9])*"
  MessageRequestDto:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      userType:
        type: "string"
      device:
        type: "string"
      fieldName:
        type: "string"
      keyValueSubstitues:
        type: "object"
        additionalProperties:
          type: "object"
      locale:
        type: "string"
  SuccessResponse:
    type: "object"
    properties:
      transactionStatus:
        type: "string"
        enum:
        - "APPROVED"
        - "ERROR"
        - "DECLINED"
        - "DISHONOURED"
        - "PROCESSED"
        - "SUBMITTED"
        - "PENDING"
        - "INITIAL"
        - "INPROGRESS"
        - "REFUNDED"
        - "PARTIALLY_REFUNDED"
        - "CLEARED"
        - "CANCELLED"
      transactionId:
        type: "integer"
        format: "int64"
      responseCode:
        type: "string"
      dtrn:
        type: "integer"
        format: "int64"
      success:
        type: "boolean"
        default: false
  TransactionFeeForCardResponseDto:
    type: "object"
    properties:
      surcharge:
        type: "number"
      fee:
        type: "number"
      currencyCode:
        type: "string"
      cardScheme:
        type: "string"
      international:
        type: "boolean"
        default: false
  TransactionFeeResponseDto:
    type: "object"
    properties:
      surcharge:
        type: "number"
      fee:
        type: "number"
      currencyCode:
        type: "string"
  PayerDrnDto:
    type: "object"
    properties:
      payerId:
        type: "integer"
        format: "int64"
      drnId:
        type: "integer"
        format: "int64"
      drn:
        type: "string"
      startDate:
        type: "string"
        format: "date-time"
      endDate:
        type: "string"
        format: "date-time"
      nickName:
        type: "string"
      status:
        type: "string"
        enum:
        - "ACTIVE"
        - "INACTIVE"
        - "SUSPENDED"
      ivrCode:
        type: "string"
  CardConfirmationResponse:
    type: "object"
    properties:
      status:
        type: "string"
        enum:
        - "APPROVED"
        - "ERROR"
        - "DECLINED"
        - "DISHONOURED"
        - "PROCESSED"
        - "SUBMITTED"
        - "PENDING"
        - "INITIAL"
        - "INPROGRESS"
        - "REFUNDED"
        - "PARTIALLY_REFUNDED"
        - "CLEARED"
        - "CANCELLED"
      success:
        type: "boolean"
        default: false
  MigrationReadyResponse:
    type: "object"
    properties:
      migrationReady:
        type: "boolean"
        default: false
  UserEmailUpdated:
    type: "object"
    properties:
      created:
        type: "string"
        format: "date-time"
      createdBy:
        type: "integer"
        format: "int64"
      updated:
        type: "string"
        format: "date-time"
      updatedBy:
        type: "integer"
        format: "int64"
      id:
        type: "integer"
        format: "int64"
      deftUser:
        $ref: "#/definitions/DeftUser"
      securityCode:
        type: "string"
      email:
        type: "string"
  AuditLogDetail:
    type: "object"
    properties:
      created:
        type: "string"
        format: "date-time"
      createdBy:
        type: "integer"
        format: "int64"
      updated:
        type: "string"
        format: "date-time"
      updatedBy:
        type: "integer"
        format: "int64"
      status:
        type: "string"
        enum:
        - "INACTIVE"
        - "ACTIVE"
      id:
        type: "integer"
        format: "int64"
      audit:
        $ref: "#/definitions/AuditLog"
      entityType:
        type: "string"
      entityId:
        type: "integer"
        format: "int64"
      columnName:
        type: "string"
      oldValue:
        type: "string"
      newValue:
        type: "string"
      active:
        type: "boolean"
        default: false
  DeftUserDetailsBaseDto:
    type: "object"
    required:
    - "firstName"
    - "lastName"
    - "userName"
    properties:
      emailAddress:
        type: "string"
        minLength: 1
        maxLength: 255
        pattern: "([^\\s@]+@[^@\\s]+\\.[^@\\s]+)([a-zA-Z0-9])"
      mobileNumber:
        type: "string"
        minLength: 10
        maxLength: 10
        pattern: "04\\d{8}"
      id:
        type: "integer"
        format: "int64"
      lastLogin:
        type: "string"
        format: "date-time"
      status:
        type: "object"
      userName:
        type: "string"
        position: 1
        description: "Email address"
      firstName:
        type: "string"
        position: 5
        description: "First name"
        minLength: 1
        maxLength: 32
        pattern: "^(?!\\s)([a-zA-Z0-9\\s-'])+(?<!\\s)"
      lastName:
        type: "string"
        position: 10
        description: "Last name"
        minLength: 1
        maxLength: 32
        pattern: "^(?!\\s)([a-zA-Z0-9\\s-'])+(?<!\\s)"
      landLine:
        type: "string"
        position: 15
        description: "Contact phone number"
        minLength: 10
        maxLength: 10
        pattern: "0[2378]\\d{8}"
  PaymentScheduleSearchResult:
    type: "object"
    properties:
      summary:
        $ref: "#/definitions/PageSummary"
      results:
        type: "array"
        items:
          $ref: "#/definitions/GetPaymentScheduleResponse"
  DDAuthorityResponseDto:
    type: "object"
    properties:
      drn:
        type: "string"
      payerId:
        type: "integer"
        format: "int64"
      firstName:
        type: "string"
      lastName:
        type: "string"
      contactNumber:
        type: "string"
      emailAddress:
        type: "string"
      paymentMethod:
        type: "string"
        enum:
        - "CARD"
        - "DIRECT_DEBIT"
        - "BPAY"
        - "AUSTRALIA_POST"
        - "LOCKED_BAG"
        - "FEE"
        - "SURCHARGE"
        - "REFUND"
      startDate:
        type: "string"
        format: "date-time"
      endDate:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        enum:
        - "INACTIVE"
        - "ACTIVE"
  ValidateCardTransactionRequestDto:
    type: "object"
    required:
    - "cardInfo"
    - "currencyCode"
    - "dtrn"
    - "dynamicName"
    - "ecomIndicator"
    - "merchantId"
    - "processorRef"
    - "processorTransactionType"
    - "terminalId"
    - "totalAmount"
    properties:
      fee:
        type: "number"
      surchargeAmount:
        type: "number"
      dtrn:
        type: "integer"
        format: "int64"
        position: 10
        description: "DTRN (Deft Transaction Reference Number) of the transaction"
      merchantId:
        type: "string"
        position: 12
        description: "MerchantID used"
        pattern: "([a-zA-Z0-9\\s-])*"
      terminalId:
        type: "string"
        position: 14
        description: "TerminalId used"
        pattern: "([a-zA-Z0-9\\s-])*"
      dynamicName:
        type: "string"
        position: 16
        description: "Dynamic Name used"
        pattern: "([\\u0020-\\u007E])*"
      cardInfo:
        position: 30
        description: "Card details"
        $ref: "#/definitions/CardInfoDto"
      currencyCode:
        type: "string"
        position: 40
        description: "Currency code in ISO 4217 Alphabetic code (e.g. AUD)"
        minLength: 1
        maxLength: 3
        pattern: "([a-zA-Z])*"
      totalAmount:
        type: "number"
        position: 50
        description: "Total amount of the transaction, i.e. including fees and surcharges "
      ecomIndicator:
        type: "string"
        position: 80
        description: "Transaction Ecommerce Indicator"
        minLength: 1
        maxLength: 2147483647
        pattern: "([a-zA-Z0-9])*"
      processorRef:
        type: "string"
        position: 90
        description: "Transaction reference in the processing system"
        minLength: 1
        maxLength: 2147483647
        pattern: "([a-zA-Z0-9\\s-])*"
      processorTransactionType:
        type: "string"
        position: 100
        description: "Transaction type in the processing system, e.g. OneStepPayment\
          \ or RefundPayment "
        minLength: 1
        maxLength: 2147483647
        pattern: "([a-zA-Z0-9\\s-])*"
  BankAccountDto:
    type: "object"
    required:
    - "accountName"
    - "accountNumber"
    - "bsb"
    properties:
      bsb:
        type: "string"
        minLength: 6
        maxLength: 6
        pattern: "([0-9])*"
      accountNumber:
        type: "string"
        minLength: 1
        maxLength: 9
        pattern: "([0-9])*"
      accountName:
        type: "string"
        minLength: 1
        maxLength: 100
        pattern: "([a-zA-Z0-9\\s'.-])*"
      defaultFlag:
        type: "boolean"
        default: false
      token:
        type: "string"
        readOnly: true
      id:
        type: "integer"
        format: "int64"
      payerId:
        type: "integer"
        format: "int64"
  PayerEnquiryRequest:
    type: "object"
    required:
    - "phoneNumber"
    properties:
      phoneNumber:
        type: "string"
        minLength: 8
        maxLength: 20
        pattern: "\\+?\\d+"
      payerId:
        type: "integer"
        format: "int64"
      drn:
        type: "string"
        minLength: 1
        maxLength: 20
        pattern: "([0-9])*"
  FailureResponse:
    type: "object"
    properties:
      status:
        type: "string"
        enum:
        - "APPROVED"
        - "ERROR"
        - "DECLINED"
        - "DISHONOURED"
        - "PROCESSED"
        - "SUBMITTED"
        - "PENDING"
        - "INITIAL"
        - "INPROGRESS"
        - "REFUNDED"
        - "PARTIALLY_REFUNDED"
        - "CLEARED"
        - "CANCELLED"
      responseCode:
        type: "string"
      switchResponseCode:
        type: "string"
      responseTimestamp:
        type: "string"
        format: "date-time"
      receiptNumber:
        type: "string"
      dtrn:
        type: "integer"
        format: "int64"
      success:
        type: "boolean"
        default: false
  PayerDrnSummary:
    type: "object"
    required:
    - "payerDrnBillerAggregateList"
    properties:
      payerDrnBillerAggregateList:
        type: "array"
        position: 1
        description: "Aggregate of Payer-DRN and Biller information"
        items:
          $ref: "#/definitions/PayerDrnBillerAggregate"
  CardInfoDto:
    type: "object"
    required:
    - "cardBin"
    - "cardHolderName"
    - "expiryDate"
    - "lastFourDigits"
    properties:
      cardScheme:
        type: "string"
        minLength: 0
        maxLength: 100
        pattern: "([a-zA-Z0-9\\s'.-])*"
      cardBin:
        type: "string"
        position: 5
        description: "Card bin i.e. first 6 digits of card"
      lastFourDigits:
        type: "string"
        position: 10
        description: "Last forur digits of card"
      cardHolderName:
        type: "string"
        position: 15
        description: "Card holder name"
        minLength: 0
        maxLength: 200
        pattern: "([a-zA-Z0-9\\s'.-])*"
      expiryDate:
        type: "string"
        position: 20
        description: "Expiry date in the format mmyy"
  PaymentScheduleUpdateRequest:
    type: "object"
    required:
    - "amount"
    - "channel"
    - "currencyCode"
    - "cycleFrequency"
    - "cycleInterval"
    - "paymentMethod"
    properties:
      payerId:
        type: "integer"
        format: "int64"
      startDate:
        type: "string"
        format: "date-time"
      endDate:
        type: "string"
        format: "date-time"
      paymentMethod:
        type: "string"
        enum:
        - "DIRECT_DEBIT"
        - "CARD"
      cycleInterval:
        type: "string"
        enum:
        - "D"
        - "W"
        - "M"
        - "Y"
      cycleFrequency:
        type: "integer"
        format: "int32"
        minimum: 1.0
      amount:
        type: "number"
      secureToken:
        type: "string"
        minLength: 0
        maxLength: 16
        pattern: "([0-9])*"
      bankAccountDetails:
        $ref: "#/definitions/BankAccountDto"
      newStartDate:
        type: "string"
        format: "date-time"
      newAmount:
        type: "number"
      channel:
        type: "string"
        enum:
        - "INTERNET"
        - "IVR"
        - "BPAY"
        - "AUSTRALIA_POST"
        - "LOCKED_BAG"
        - "PAYER_PORTAL_ONE_TIME"
        - "PAYER_PORTAL"
        - "BILLER_PORTAL"
        - "BILLER_PORTAL_VIRTUAL_TERMINAL"
        - "ADMIN_PORTAL"
        - "API"
        - "ECOM_TRANSPARENT_REDIRECT"
        - "ECOM_IFRAME"
        - "ECOM_HOSTED_PAYMENT_PAGE"
        - "API_EBIX"
        - "API_EDGEWISE"
        - "API_GALLAGHERS"
        - "API_GENKAN"
        - "API_RAW_IDEAS"
        - "AUCTION_PAY"
      currencyCode:
        type: "string"
        minLength: 3
        maxLength: 3
        pattern: "([a-zA-Z0-9])*"
      rootBillerId:
        type: "integer"
        format: "int64"
      sendScheduleCreatedEmail:
        type: "boolean"
        default: false
      sendTransactionEmail:
        type: "boolean"
        default: false
      recipientEmail:
        type: "string"
        minLength: 0
        maxLength: 255
        pattern: "([^\\s@]+@[^@\\s]+\\.[^@\\s]+)([a-zA-Z0-9])"
      endPaymentCount:
        type: "integer"
        format: "int32"
        minimum: 1.0
      customDescription:
        type: "string"
        minLength: 0
        maxLength: 200
        pattern: "([a-zA-Z0-9\\s'/,.-])*"
  WalletPaymentCardResponseDto:
    type: "object"
    required:
    - "cardBin"
    - "cardExpiryDate"
    - "cardHolderName"
    - "lastFourDigits"
    - "token"
    - "tokenRefNumber"
    properties:
      cardExpiryDate:
        type: "string"
      token:
        type: "string"
        minLength: 1
        maxLength: 2147483647
        pattern: "([0-9])*"
      cardBin:
        type: "string"
        pattern: "([0-9])*"
      lastFourDigits:
        type: "string"
        pattern: "([0-9])*"
      cardHolderName:
        type: "string"
        minLength: 1
        maxLength: 2147483647
        pattern: "([a-zA-Z0-9\\s'.-])*"
      tokenRefNumber:
        type: "string"
        minLength: 0
        maxLength: 15
        pattern: "([0-9])*"
      rootBillerId:
        type: "integer"
        format: "int64"
      dbc:
        type: "integer"
        format: "int64"
      payerId:
        type: "integer"
        format: "int64"
      id:
        type: "integer"
        format: "int64"
      cardScheme:
        type: "string"
      issuingOrganization:
        type: "string"
      created:
        type: "string"
        format: "date-time"
      updated:
        type: "string"
        format: "date-time"
      expired:
        type: "boolean"
        default: false
      default:
        type: "boolean"
        default: false
  PaymentCombination:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      paymentType:
        type: "string"
      frequency:
        type: "string"
        enum:
        - "ONE_OFF"
        - "RECURRING"
      subType:
        type: "string"
      status:
        type: "string"
        enum:
        - "INACTIVE"
        - "ACTIVE"
  MidAndDynamicNameOverrideDto:
    type: "object"
    properties:
      cardAcceptorName:
        type: "string"
      cardAcceptorLocation:
        type: "string"
      dynamicName:
        type: "string"
      terminalId:
        type: "string"
  RoleModifyDto:
    type: "object"
    properties:
      name:
        type: "string"
      permissionIds:
        type: "array"
        items:
          type: "integer"
          format: "int64"
  ResetPasswordRequest:
    type: "object"
    required:
    - "email"
    properties:
      email:
        type: "string"
        minLength: 1
        maxLength: 254
        pattern: "([^\\s@]+@[^@\\s]+\\.[^@\\s]+)([a-zA-Z0-9])"
      captchaResponse:
        type: "string"
  PaymentScheduleResponse:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      createdTimestamp:
        type: "string"
        format: "date-time"
      nextPaymentDate:
        type: "string"
        format: "date-time"
      drn:
        type: "string"
      crn:
        type: "string"
      status:
        type: "string"
        enum:
        - "ACTIVE"
        - "CANCELLED"
        - "COMPLETE"
        - "EXECUTING"
      updatedDate:
        type: "string"
        format: "date-time"
      endPaymentCount:
        type: "integer"
        format: "int32"
  BillerRoleDetails:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      biller:
        $ref: "#/definitions/BillerDto"
      role:
        $ref: "#/definitions/Role"
  PayerDrnBillerAggregate:
    type: "object"
    required:
    - "biller"
    - "payerDrn"
    properties:
      payerDrn:
        position: 5
        description: "Payer-DRN link"
        $ref: "#/definitions/PayerDrnLink"
      biller:
        position: 10
        description: "Information for Biller associated with DRN"
        $ref: "#/definitions/Biller"
    description: "Representation of a Payer-DRN link and information about the biller\
      \ associated with the DRN"
  BillerHierarchyWithPagingRequestDto:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      pageInfo:
        $ref: "#/definitions/Paging"
  IndustryDetails:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
  PayerDrnRequest:
    type: "object"
    required:
    - "drn"
    properties:
      drn:
        type: "string"
        minLength: 1
        maxLength: 20
        pattern: "([0-9])*"
      ivrCode:
        type: "string"
        minLength: 6
        maxLength: 6
        pattern: "([0-9])*"
      nickname:
        type: "string"
        minLength: 0
        maxLength: 20
        pattern: "^(?!\\s)[-a-zA-Z0-9\\s,./]{0,20}(?<!\\s)"
  LogonDto:
    type: "object"
    properties:
      userDetails:
        $ref: "#/definitions/DeftUserDetailsBaseDto"
      userType:
        type: "string"
        enum:
        - "MGL"
        - "PAYER"
        - "BILLER"
        - "API"
        - "BATCH"
      lastLogin:
        type: "string"
        format: "date-time"
      showSplash:
        type: "boolean"
        default: false
      permissions:
        type: "array"
        items:
          $ref: "#/definitions/PermissionDetailedDto"
  BillerDetailsMidAndDynamicNamesDto:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      type:
        type: "string"
        enum:
        - "GROUP_CUSTOMER"
        - "BUSINESS_CUSTOMER"
        - "FACILITY"
        - "ACCOUNT"
      name:
        type: "string"
      status:
        type: "string"
        enum:
        - "INACTIVE"
        - "ACTIVE"
      industry:
        $ref: "#/definitions/IndustryDetailsInherited"
      midDetails:
        type: "array"
        items:
          $ref: "#/definitions/MidAndDynamicNameDto"
      transactionLowerLimit:
        type: "number"
      transactionUpperLimit:
        type: "number"
      transactionFees:
        type: "array"
        items:
          $ref: "#/definitions/FeeConfigurationDto"
      supportedPaymentTypes:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
  MglUserUpdateRequest:
    type: "object"
    required:
    - "firstName"
    - "lastName"
    - "officeLocation"
    - "userName"
    properties:
      emailAddress:
        type: "string"
        minLength: 1
        maxLength: 255
        pattern: "([^\\s@]+@[^@\\s]+\\.[^@\\s]+)([a-zA-Z0-9])"
      mobileNumber:
        type: "string"
        minLength: 10
        maxLength: 10
        pattern: "04\\d{8}"
      officeLocation:
        type: "integer"
        format: "int64"
        description: "ID of Office Location object"
      userName:
        type: "string"
        position: 1
        description: "Email address"
      firstName:
        type: "string"
        position: 5
        description: "First name"
        minLength: 1
        maxLength: 32
        pattern: "^(?!\\s)([a-zA-Z0-9\\s-'])+(?<!\\s)"
      lastName:
        type: "string"
        position: 10
        description: "Last name"
        minLength: 1
        maxLength: 32
        pattern: "^(?!\\s)([a-zA-Z0-9\\s-'])+(?<!\\s)"
      landLine:
        type: "string"
        position: 15
        description: "Contact phone number"
        minLength: 10
        maxLength: 10
        pattern: "0[2378]\\d{8}"
    description: "Request object for updating an existing MGL user"
  AdUserSearchRequestDto:
    type: "object"
    properties:
      emailAddress:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      userName:
        type: "string"
  BillerUserBaseDto:
    type: "object"
    required:
    - "country"
    - "firstName"
    - "lastName"
    - "userName"
    properties:
      emailAddress:
        type: "string"
        minLength: 1
        maxLength: 255
        pattern: "([^\\s@]+@[^@\\s]+\\.[^@\\s]+)([a-zA-Z0-9])"
      mobileNumber:
        type: "string"
        minLength: 10
        maxLength: 10
        pattern: "04\\d{8}"
      country:
        type: "string"
        description: "Country"
      state:
        type: "string"
        description: "State of country"
        enum:
        - "NSW"
        - "VIC"
        - "QLD"
        - "SA"
        - "NT"
        - "ACT"
        - "WA"
        - "TAS"
      userName:
        type: "string"
        position: 1
        description: "Email address"
      firstName:
        type: "string"
        position: 5
        description: "First name"
        minLength: 1
        maxLength: 32
        pattern: "^(?!\\s)([a-zA-Z0-9\\s-'])+(?<!\\s)"
      lastName:
        type: "string"
        position: 10
        description: "Last name"
        minLength: 1
        maxLength: 32
        pattern: "^(?!\\s)([a-zA-Z0-9\\s-'])+(?<!\\s)"
      landLine:
        type: "string"
        position: 15
        description: "Contact phone number"
        minLength: 10
        maxLength: 10
        pattern: "0[2378]\\d{8}"
  UpdateCardTokenDto:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      payerId:
        type: "integer"
        format: "int64"
      token:
        type: "string"
      rootBillerId:
        type: "integer"
        format: "int64"
      dbc:
        type: "integer"
        format: "int64"
      default:
        type: "boolean"
        default: false
      cardDetails:
        $ref: "#/definitions/WalletPaymentCardExpiryDateDto"
  BankBranchDto:
    type: "object"
    required:
    - "bsb"
    properties:
      bsb:
        type: "string"
        minLength: 5
        maxLength: 6
        pattern: "([0-9])*"
      city:
        type: "string"
      state:
        type: "string"
      financialName:
        type: "string"
  AdUserSearchResponseDto:
    type: "object"
    properties:
      userName:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      emailAddress:
        type: "string"
      accountValid:
        type: "boolean"
        default: false
      passwordValid:
        type: "boolean"
        default: false
  JwtToken:
    type: "object"
    properties:
      token:
        type: "string"
      expiry:
        type: "string"
        format: "date-time"
  SingleDrnDto:
    type: "object"
    required:
    - "drn"
    properties:
      drn:
        type: "string"
        position: 1
        description: "DEFT Reference Number to validate"
  AuctionDto:
    type: "object"
    required:
    - "propertyAddress"
    properties:
      tcVersion:
        type: "string"
        minLength: 1
        maxLength: 50
        pattern: "([0-9.])*"
      propertyAddress:
        $ref: "#/definitions/AuctionAddressDto"
  MessageDto:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"
      fieldName:
        type: "string"
  PaymentExecutionResponse:
    type: "object"
    properties:
      result:
        type: "string"
  BillerRoleCreate:
    type: "object"
    properties:
      billerId:
        type: "integer"
        format: "int64"
      roleId:
        type: "integer"
        format: "int64"
  BillerSearchWithPagingRequestDto:
    type: "object"
    properties:
      limit:
        type: "integer"
        format: "int32"
        minimum: 0.0
      offset:
        type: "integer"
        format: "int32"
        minimum: 0.0
      order:
        type: "string"
        enum:
        - "ASC"
        - "DESC"
      orderBy:
        type: "string"
      id:
        type: "integer"
        format: "int64"
      rootBillerId:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      type:
        type: "string"
      status:
        type: "string"
      pageInfo:
        $ref: "#/definitions/Paging"
      includeParents:
        type: "boolean"
        default: false
      ddaEnabled:
        type: "boolean"
        default: false
  CalculateSurchargeRequest:
    type: "object"
    required:
    - "amount"
    - "currencyCode"
    properties:
      amount:
        type: "number"
      surcharge:
        type: "number"
      currencyCode:
        type: "string"
        minLength: 1
        maxLength: 3
        pattern: "([a-zA-Z0-9])*"
  BankStateBanchResponseDto:
    type: "object"
    required:
    - "bsb"
    properties:
      bsb:
        type: "string"
        minLength: 5
        maxLength: 6
        pattern: "([0-9])*"
      city:
        type: "string"
      state:
        type: "string"
      financialName:
        type: "string"
      financialCode:
        type: "string"
      addressLine1:
        type: "string"
      addressLine2:
        type: "string"
      postcode:
        type: "string"
      paymentSystems:
        type: "string"
  BillerSearchDto:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      type:
        type: "string"
        enum:
        - "GROUP_CUSTOMER"
        - "BUSINESS_CUSTOMER"
        - "FACILITY"
        - "ACCOUNT"
      name:
        type: "string"
      recordStatus:
        type: "string"
        enum:
        - "INACTIVE"
        - "ACTIVE"
      accessible:
        type: "boolean"
        default: false
      parent:
        $ref: "#/definitions/BillerSearchDto"
      ddaEnabled:
        type: "boolean"
        default: false
  BillerPaymentDto:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      type:
        type: "string"
        enum:
        - "GROUP_CUSTOMER"
        - "BUSINESS_CUSTOMER"
        - "FACILITY"
        - "ACCOUNT"
      name:
        type: "string"
      status:
        type: "string"
      accessible:
        type: "boolean"
        default: false
      drn:
        type: "string"
      paymentDescriptions:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
      cardMinTxnAmount:
        type: "number"
      cardMaxTxnAmount:
        type: "number"
      directDebitMinTxnAmount:
        type: "number"
      directDebitMaxTxnAmount:
        type: "number"
      supportedPaymentTypes:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
      auctionPayEmail:
        type: "string"
      industryId:
        type: "integer"
        format: "int64"
  PaymentDetailsDto:
    type: "object"
    properties:
      cardScheme:
        type: "string"
      frequency:
        type: "string"
        enum:
        - "ONE_OFF"
        - "RECURRING"
      cardFirstSixDigits:
        type: "string"
      cardLastFourDigits:
        type: "string"
      cardHolderName:
        type: "string"
      cardExpiry:
        type: "string"
      bsb:
        type: "string"
      bankAccount:
        type: "string"
      bankAccountName:
        type: "string"
  BillerUserCreateRequest:
    type: "object"
    required:
    - "country"
    - "firstName"
    - "lastName"
    - "userName"
    properties:
      emailAddress:
        type: "string"
        minLength: 1
        maxLength: 255
        pattern: "([^\\s@]+@[^@\\s]+\\.[^@\\s]+)([a-zA-Z0-9])"
      mobileNumber:
        type: "string"
        minLength: 10
        maxLength: 10
        pattern: "04\\d{8}"
      country:
        type: "string"
        description: "Country"
      state:
        type: "string"
        description: "State of country"
        enum:
        - "NSW"
        - "VIC"
        - "QLD"
        - "SA"
        - "NT"
        - "ACT"
        - "WA"
        - "TAS"
      status:
        type: "string"
        description: "Record status, ACTIVE by default"
        enum:
        - "INACTIVE"
        - "ACTIVE"
      billerRolePairs:
        type: "array"
        items:
          $ref: "#/definitions/BillerRoleCreate"
      userName:
        type: "string"
        position: 1
        description: "Email address"
      firstName:
        type: "string"
        position: 5
        description: "First name"
        minLength: 1
        maxLength: 32
        pattern: "^(?!\\s)([a-zA-Z0-9\\s-'])+(?<!\\s)"
      lastName:
        type: "string"
        position: 10
        description: "Last name"
        minLength: 1
        maxLength: 32
        pattern: "^(?!\\s)([a-zA-Z0-9\\s-'])+(?<!\\s)"
      landLine:
        type: "string"
        position: 15
        description: "Contact phone number"
        minLength: 10
        maxLength: 10
        pattern: "0[2378]\\d{8}"
  CardSchemes:
    type: "object"
    properties:
      includedSchemes:
        type: "array"
        position: 10
        description: "List of schemes (brands) to include in result"
        items:
          type: "string"
  CreateDebitTransactionRequest:
    type: "object"
    required:
    - "amount"
    - "channel"
    - "currencyCode"
    - "drn"
    - "fee"
    - "paymentFrequency"
    - "recipientEmail"
    - "surchargeAmount"
    - "totalAmount"
    properties:
      customerReference:
        type: "string"
        minLength: 0
        maxLength: 280
      rootBillerId:
        type: "integer"
        format: "int64"
      payerId:
        type: "integer"
        format: "int64"
      secureToken:
        type: "string"
        minLength: 0
        maxLength: 20
        pattern: "([0-9])*"
      injectFeeAndSurcharge:
        type: "boolean"
        default: false
      dbc:
        type: "integer"
        format: "int64"
      crn:
        type: "integer"
        format: "int64"
      captchaResponse:
        type: "string"
      bankAccountDetails:
        $ref: "#/definitions/BankAccountDto"
      auction:
        $ref: "#/definitions/AuctionDto"
      drn:
        type: "string"
        position: 10
        description: "Deft Reference Number (DRN)"
        minLength: 1
        maxLength: 20
        pattern: "([0-9])*"
      channel:
        type: "string"
        position: 15
        description: "Channel through which the payment is made"
        enum:
        - "INTERNET"
        - "IVR"
        - "BPAY"
        - "AUSTRALIA_POST"
        - "LOCKED_BAG"
        - "PAYER_PORTAL_ONE_TIME"
        - "PAYER_PORTAL"
        - "BILLER_PORTAL"
        - "BILLER_PORTAL_VIRTUAL_TERMINAL"
        - "ADMIN_PORTAL"
        - "API"
        - "ECOM_TRANSPARENT_REDIRECT"
        - "ECOM_IFRAME"
        - "ECOM_HOSTED_PAYMENT_PAGE"
        - "API_EBIX"
        - "API_EDGEWISE"
        - "API_GALLAGHERS"
        - "API_GENKAN"
        - "API_RAW_IDEAS"
        - "AUCTION_PAY"
      currencyCode:
        type: "string"
        position: 35
        description: "Currency code in ISO 4217 Alphabetic code (e.g. AUD)"
        minLength: 1
        maxLength: 3
        pattern: "([a-zA-Z0-9])*"
      amount:
        type: "number"
        position: 40
        description: "Amount of the main payment"
      fee:
        type: "number"
        position: 45
        description: "Fee component for payment"
      surchargeAmount:
        type: "number"
        position: 50
        description: "Surharge component for payment"
      totalAmount:
        type: "number"
        position: 55
        description: "Total amount of the transaction, i.e. including fees and surcharges "
      recipientEmail:
        type: "string"
        position: 60
        description: "Email address for notification"
        pattern: "([\\u0020-\\u007E])*"
      paymentFrequency:
        type: "string"
        position: 65
        description: "Payment frequency for this payment (e.g. RECURRING or ONE_OFF)"
        enum:
        - "ONE_OFF"
        - "RECURRING"
  FeeConfigurationDto:
    type: "object"
    properties:
      paymentType:
        type: "string"
      fees:
        type: "object"
        additionalProperties:
          type: "object"
          additionalProperties:
            $ref: "#/definitions/FeeConfigurationForBillerDto"
  BillerPaymentType:
    type: "object"
    properties:
      created:
        type: "string"
        format: "date-time"
      createdBy:
        type: "integer"
        format: "int64"
      updated:
        type: "string"
        format: "date-time"
      updatedBy:
        type: "integer"
        format: "int64"
      status:
        type: "string"
        enum:
        - "INACTIVE"
        - "ACTIVE"
      createdBatchId:
        type: "integer"
        format: "int64"
      createdBatchLineNumber:
        type: "integer"
        format: "int64"
      updatedBatchId:
        type: "integer"
        format: "int64"
      updatedBatchLineNumber:
        type: "integer"
        format: "int64"
      id:
        type: "integer"
        format: "int64"
      biller:
        $ref: "#/definitions/Biller"
      paymentType:
        $ref: "#/definitions/PaymentType"
      casualSurcharge:
        type: "number"
      recursivePayerSurcharge:
        type: "number"
      recursiveSurcharge:
        type: "number"
      directDebitFee:
        type: "number"
      upperTransactionLimit:
        type: "number"
      allowRetry:
        type: "boolean"
        default: false
      retryPeriod:
        type: "integer"
        format: "int32"
      description:
        type: "string"
      active:
        type: "boolean"
        default: false
  DrnSearchWithPagingRequestDto:
    type: "object"
    properties:
      drn:
        type: "string"
      billerId:
        type: "integer"
        format: "int64"
      type:
        type: "string"
      status:
        type: "string"
      pageInfo:
        $ref: "#/definitions/Paging"
  PayerResponseDto:
    type: "object"
    required:
    - "firstName"
    - "lastName"
    - "userName"
    properties:
      emailAddress:
        type: "string"
        minLength: 1
        maxLength: 255
        pattern: "([^\\s@]+@[^@\\s]+\\.[^@\\s]+)([a-zA-Z0-9])"
      mobileNumber:
        type: "string"
        minLength: 10
        maxLength: 10
        pattern: "04\\d{8}"
      id:
        type: "integer"
        format: "int64"
      lastLogin:
        type: "string"
        format: "date-time"
      intlPhoneNumber:
        type: "string"
      status:
        type: "string"
        enum:
        - "MIGRATION_READY"
        - "SELF_REGISTRATION_STARTED"
        - "BILLER_REGISTRATION_STARTED"
        - "MIGRATION_STARTED"
        - "SELF_REGISTRATION_COMPLETE_DETAILS"
        - "BILLER_REGISTRATION_CONFIRM_DETAILS"
        - "MIGRATION_CONFIRM_DETAILS"
        - "ACTIVE"
        - "INACTIVE"
      address:
        $ref: "#/definitions/AddressDto"
      subscriptions:
        type: "array"
        items:
          $ref: "#/definitions/UserSubscriptionsDto"
      dob:
        type: "string"
        format: "date-time"
      displayName:
        type: "string"
      userName:
        type: "string"
        position: 1
        description: "Email address"
      firstName:
        type: "string"
        position: 5
        description: "First name"
        minLength: 1
        maxLength: 32
        pattern: "^(?!\\s)([a-zA-Z0-9\\s-'])+(?<!\\s)"
      lastName:
        type: "string"
        position: 10
        description: "Last name"
        minLength: 1
        maxLength: 32
        pattern: "^(?!\\s)([a-zA-Z0-9\\s-'])+(?<!\\s)"
      landLine:
        type: "string"
        position: 15
        description: "Contact phone number"
        minLength: 10
        maxLength: 10
        pattern: "0[2378]\\d{8}"
  AuditLog:
    type: "object"
    properties:
      created:
        type: "string"
        format: "date-time"
      createdBy:
        type: "integer"
        format: "int64"
      updated:
        type: "string"
        format: "date-time"
      updatedBy:
        type: "integer"
        format: "int64"
      status:
        type: "string"
        enum:
        - "INACTIVE"
        - "ACTIVE"
      id:
        type: "integer"
        format: "int64"
      userId:
        type: "integer"
        format: "int64"
      ipAddress:
        type: "string"
      serverIpAddress:
        type: "string"
      userAgent:
        type: "string"
      eventType:
        type: "string"
        enum:
        - "SERVICE"
        - "REQUEST_LOG"
        - "LOGON"
      resource:
        type: "string"
      instance:
        type: "string"
      operation:
        type: "string"
      operationResult:
        type: "string"
        enum:
        - "PENDING"
        - "SUCCESS"
        - "FAILURE"
        - "UNKNOWN"
      duration:
        type: "integer"
        format: "int64"
      otherInfo:
        type: "string"
      auditLogDetails:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/AuditLogDetail"
      user:
        $ref: "#/definitions/DeftUser"
      operationStartTime:
        type: "integer"
        format: "int64"
      active:
        type: "boolean"
        default: false
  Biller:
    type: "object"
    required:
    - "accessible"
    - "id"
    - "name"
    - "status"
    - "type"
    properties:
      id:
        type: "integer"
        format: "int64"
        position: 5
        description: "id"
      type:
        type: "string"
        position: 10
        description: "Type of Biller"
        enum:
        - "GROUP_CUSTOMER"
        - "BUSINESS_CUSTOMER"
        - "FACILITY"
        - "ACCOUNT"
      name:
        type: "string"
        position: 15
        description: "Biller name"
      status:
        type: "string"
        position: 20
        description: "Status"
      accessible:
        type: "boolean"
        position: 20
        description: "Is the Biller accessible (only relevant if accessing the Biller\
          \ hierarchy)?"
        default: false
    description: "Short representation of a biller"
  Industry:
    type: "object"
    properties:
      created:
        type: "string"
        format: "date-time"
      createdBy:
        type: "integer"
        format: "int64"
      updated:
        type: "string"
        format: "date-time"
      updatedBy:
        type: "integer"
        format: "int64"
      status:
        type: "string"
        enum:
        - "INACTIVE"
        - "ACTIVE"
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      description:
        type: "string"
      industryPaymentTypes:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/IndustryPaymentType"
      industryPaymentDescriptions:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/PaymentDescription"
      activeIndustryPaymentDescriptions:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/PaymentDescription"
      active:
        type: "boolean"
        default: false
  CreateCardTransactionRequestDtoV2:
    type: "object"
    required:
    - "amount"
    - "channel"
    - "currencyCode"
    - "drn"
    - "dtrn"
    - "ecomIndicator"
    - "fee"
    - "messageType"
    - "paymentDescription"
    - "paymentFrequency"
    - "recipientEmail"
    - "schemeName"
    - "surchargeAmount"
    - "totalAmount"
    properties:
      customerReference:
        type: "string"
        minLength: 0
        maxLength: 280
      rootBillerId:
        type: "integer"
        format: "int64"
      payerId:
        type: "integer"
        format: "int64"
      secureToken:
        type: "string"
        minLength: 0
        maxLength: 20
        pattern: "([0-9])*"
      injectFeeAndSurcharge:
        type: "boolean"
        default: false
      dbc:
        type: "integer"
        format: "int64"
      crn:
        type: "integer"
        format: "int64"
      captchaResponse:
        type: "string"
      aggregatorChannel:
        type: "string"
      cardBin:
        type: "string"
      drn:
        type: "string"
        position: 10
        description: "Deft Reference Number (DRN)"
        minLength: 1
        maxLength: 20
        pattern: "([0-9])*"
      channel:
        type: "string"
        position: 15
        description: "Channel through which the payment is made"
        enum:
        - "INTERNET"
        - "IVR"
        - "BPAY"
        - "AUSTRALIA_POST"
        - "LOCKED_BAG"
        - "PAYER_PORTAL_ONE_TIME"
        - "PAYER_PORTAL"
        - "BILLER_PORTAL"
        - "BILLER_PORTAL_VIRTUAL_TERMINAL"
        - "ADMIN_PORTAL"
        - "API"
        - "ECOM_TRANSPARENT_REDIRECT"
        - "ECOM_IFRAME"
        - "ECOM_HOSTED_PAYMENT_PAGE"
        - "API_EBIX"
        - "API_EDGEWISE"
        - "API_GALLAGHERS"
        - "API_GENKAN"
        - "API_RAW_IDEAS"
        - "AUCTION_PAY"
      paymentDescription:
        type: "string"
        position: 20
        description: "Payment description"
        pattern: "([\\u0020-\\u007E])*"
      schemeName:
        type: "string"
        position: 30
        description: "Scheme (aka Card Brand) - must match the Card Brand from APRA\
          \ (i.e. 'VISA', 'MASTERCARD', 'AMERICAN EXPRESS', 'DINERS CLUB INTERNATIONAL')"
        minLength: 1
        maxLength: 2147483647
        pattern: "([a-zA-Z0-9\\s-])*"
      currencyCode:
        type: "string"
        position: 35
        description: "Currency code in ISO 4217 Alphabetic code (e.g. AUD)"
        minLength: 1
        maxLength: 3
        pattern: "([a-zA-Z0-9])*"
      amount:
        type: "number"
        position: 40
        description: "Amount of the main payment"
      fee:
        type: "number"
        position: 45
        description: "Fee component for payment"
      surchargeAmount:
        type: "number"
        position: 50
        description: "Surharge component for payment"
      totalAmount:
        type: "number"
        position: 55
        description: "Total amount of the transaction, i.e. including fees and surcharges "
      recipientEmail:
        type: "string"
        position: 60
        description: "Email address for notification"
        pattern: "([\\u0020-\\u007E])*"
      paymentFrequency:
        type: "string"
        position: 65
        description: "Payment frequency for this payment (e.g. RECURRING or ONE_OFF)"
        enum:
        - "ONE_OFF"
        - "RECURRING"
      messageType:
        type: "string"
        position: 70
        description: "Card transaction message type"
        enum:
        - "PRE_AUTH"
        - "CAPTURE"
        - "ONE_STEP"
        - "CANCEL"
        - "AUTO_CANCEL"
        - "REFUND"
      dtrn:
        type: "integer"
        format: "int64"
        position: 80
        description: "DTRN (Deft Transaction Reference Number for original transaction\
          \ - only required for payments referencing another transaction (e.g. refunds)"
      ecomIndicator:
        type: "string"
        position: 90
        description: "Transaction Ecommerce Indicator"
        pattern: "([a-zA-Z0-9])*"
  BillerUserDetails:
    type: "object"
    required:
    - "country"
    - "firstName"
    - "lastName"
    - "userName"
    properties:
      emailAddress:
        type: "string"
        minLength: 1
        maxLength: 255
        pattern: "([^\\s@]+@[^@\\s]+\\.[^@\\s]+)([a-zA-Z0-9])"
      mobileNumber:
        type: "string"
        minLength: 10
        maxLength: 10
        pattern: "04\\d{8}"
      id:
        type: "integer"
        format: "int64"
      lastLogin:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        enum:
        - "INACTIVE"
        - "ACTIVE"
      country:
        type: "string"
        description: "Country"
      state:
        type: "string"
        description: "State of country"
        enum:
        - "NSW"
        - "VIC"
        - "QLD"
        - "SA"
        - "NT"
        - "ACT"
        - "WA"
        - "TAS"
      billerGroup:
        $ref: "#/definitions/BillerDto"
      billerRoles:
        type: "array"
        items:
          $ref: "#/definitions/BillerRoleDetails"
      userName:
        type: "string"
        position: 1
        description: "Email address"
      firstName:
        type: "string"
        position: 5
        description: "First name"
        minLength: 1
        maxLength: 32
        pattern: "^(?!\\s)([a-zA-Z0-9\\s-'])+(?<!\\s)"
      lastName:
        type: "string"
        position: 10
        description: "Last name"
        minLength: 1
        maxLength: 32
        pattern: "^(?!\\s)([a-zA-Z0-9\\s-'])+(?<!\\s)"
      landLine:
        type: "string"
        position: 15
        description: "Contact phone number"
        minLength: 10
        maxLength: 10
        pattern: "0[2378]\\d{8}"
  UserSubscriptionsDto:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      warningMessage:
        type: "string"
      displayText:
        type: "string"
      shortName:
        type: "string"
  UserDetailsResponse:
    type: "object"
    required:
    - "firstName"
    - "lastName"
    - "userName"
    properties:
      emailAddress:
        type: "string"
        minLength: 1
        maxLength: 255
        pattern: "([^\\s@]+@[^@\\s]+\\.[^@\\s]+)([a-zA-Z0-9])"
      mobileNumber:
        type: "string"
        minLength: 10
        maxLength: 10
        pattern: "04\\d{8}"
      id:
        type: "integer"
        format: "int64"
      lastLogin:
        type: "string"
        format: "date-time"
      status:
        type: "string"
      showSplash:
        type: "boolean"
        default: false
      userType:
        type: "string"
        enum:
        - "MGL"
        - "PAYER"
        - "BILLER"
        - "API"
        - "BATCH"
      permissions:
        type: "array"
        items:
          $ref: "#/definitions/PermissionDetailedDto"
      userName:
        type: "string"
        position: 1
        description: "Email address"
      firstName:
        type: "string"
        position: 5
        description: "First name"
        minLength: 1
        maxLength: 32
        pattern: "^(?!\\s)([a-zA-Z0-9\\s-'])+(?<!\\s)"
      lastName:
        type: "string"
        position: 10
        description: "Last name"
        minLength: 1
        maxLength: 32
        pattern: "^(?!\\s)([a-zA-Z0-9\\s-'])+(?<!\\s)"
      landLine:
        type: "string"
        position: 15
        description: "Contact phone number"
        minLength: 10
        maxLength: 10
        pattern: "0[2378]\\d{8}"
  TransactionEmailRequestDto:
    type: "object"
    properties:
      transactionId:
        type: "integer"
        format: "int64"
      recipientEmail:
        type: "string"
  DeftUser:
    type: "object"
    properties:
      created:
        type: "string"
        format: "date-time"
      createdBy:
        type: "integer"
        format: "int64"
      updated:
        type: "string"
        format: "date-time"
      updatedBy:
        type: "integer"
        format: "int64"
      id:
        type: "integer"
        format: "int64"
      userName:
        type: "string"
      email:
        type: "string"
      salutation:
        type: "string"
      displayName:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      middleName:
        type: "string"
      contactNumber:
        type: "string"
      mobileNumber:
        type: "string"
      address:
        $ref: "#/definitions/Address"
      userType:
        type: "string"
        enum:
        - "MGL"
        - "PAYER"
        - "BILLER"
        - "API"
        - "BATCH"
      lastLogin:
        type: "string"
        format: "date-time"
      latestLogin:
        type: "string"
        format: "date-time"
      externalReference:
        type: "string"
      macId:
        type: "string"
      userRoles:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/UserRole"
      lastSplashClose:
        type: "string"
        format: "date-time"
      subscriptions:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/Subscription"
      emailUpdated:
        $ref: "#/definitions/UserEmailUpdated"
      activeUserRoles:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/Role"
      active:
        type: "boolean"
        default: false
  Paging:
    type: "object"
    properties:
      limit:
        type: "integer"
        format: "int32"
        minimum: 0.0
      offset:
        type: "integer"
        format: "int32"
        minimum: 0.0
      order:
        type: "string"
        enum:
        - "ASC"
        - "DESC"
      orderBy:
        type: "string"
  IvrAuthRequest:
    type: "object"
    required:
    - "drn"
    properties:
      drn:
        type: "string"
        minLength: 1
        maxLength: 20
        pattern: "([0-9])*"
      ivrCode:
        type: "string"
        minLength: 6
        maxLength: 6
        pattern: "([0-9])*"
  PermissionDetailedDto:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      description:
        type: "string"
      type:
        type: "string"
        enum:
        - "MGL"
        - "PAYER"
        - "BILLER"
        - "API"
        - "BATCH"
  DDAuthDrnsDto:
    type: "object"
    properties:
      drns:
        type: "array"
        items:
          type: "string"
  AddressDto:
    type: "object"
    required:
    - "australian"
    - "postCode"
    - "state"
    - "streetLine1"
    - "suburb"
    properties:
      country:
        type: "string"
        position: 5
        description: "Country"
        minLength: 1
        maxLength: 99
        pattern: "([a-zA-Z0-9\\s'-])*"
      australian:
        type: "boolean"
        position: 5
        description: "Is this an Australian address?"
        default: false
      state:
        type: "string"
        position: 10
        description: "State; mandatory for an Australian address"
        enum:
        - "NSW"
        - "VIC"
        - "QLD"
        - "SA"
        - "NT"
        - "ACT"
        - "WA"
        - "TAS"
      suburb:
        type: "string"
        position: 15
        description: "Suburb; mandatory for an Australian address"
        minLength: 1
        maxLength: 64
        pattern: "([a-zA-Z0-9\\s'/,.-])*"
      postCode:
        type: "string"
        position: 20
        description: "Post code; mandatory for an Australian address"
        minLength: 4
        maxLength: 4
        pattern: "([0-9])*"
      streetLine1:
        type: "string"
        position: 25
        description: "First street line; mandatory for an Australian address"
        minLength: 1
        maxLength: 99
        pattern: "([a-zA-Z0-9\\s'/,.-])*"
      streetLine2:
        type: "string"
        position: 30
        description: "Second street line"
        minLength: 1
        maxLength: 99
        pattern: "([a-zA-Z0-9\\s'/,.-])*"
  IndustryDetailsInherited:
    type: "object"
    required:
    - "id"
    - "inherited"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      inherited:
        type: "boolean"
        default: false
  MidAndDynamicNameDto:
    type: "object"
    properties:
      mid:
        type: "string"
      scheme:
        type: "string"
      merchantName:
        type: "string"
      terminalId:
        type: "string"
      merchantCategoryCode:
        type: "string"
      cardAcceptorName:
        type: "string"
      cardAcceptorLocation:
        type: "string"
      dynamicName:
        type: "string"
      status:
        type: "string"
        enum:
        - "INACTIVE"
        - "ACTIVE"
      override:
        $ref: "#/definitions/MidAndDynamicNameOverrideDto"
  PayerUpdateRequest:
    type: "object"
    required:
    - "firstName"
    - "lastName"
    - "userName"
    properties:
      emailAddress:
        type: "string"
        minLength: 1
        maxLength: 255
        pattern: "([^\\s@]+@[^@\\s]+\\.[^@\\s]+)([a-zA-Z0-9])"
      mobileNumber:
        type: "string"
        minLength: 10
        maxLength: 10
        pattern: "04\\d{8}"
      id:
        type: "integer"
        format: "int64"
      lastLogin:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        enum:
        - "MIGRATION_READY"
        - "SELF_REGISTRATION_STARTED"
        - "BILLER_REGISTRATION_STARTED"
        - "MIGRATION_STARTED"
        - "SELF_REGISTRATION_COMPLETE_DETAILS"
        - "BILLER_REGISTRATION_CONFIRM_DETAILS"
        - "MIGRATION_CONFIRM_DETAILS"
        - "ACTIVE"
        - "INACTIVE"
      intlPhoneNumber:
        type: "string"
        minLength: 8
        maxLength: 21
        pattern: "\\+?\\d{8,20}"
      channel:
        type: "string"
        enum:
        - "INTERNET"
        - "IVR"
        - "BPAY"
        - "AUSTRALIA_POST"
        - "LOCKED_BAG"
        - "PAYER_PORTAL_ONE_TIME"
        - "PAYER_PORTAL"
        - "BILLER_PORTAL"
        - "BILLER_PORTAL_VIRTUAL_TERMINAL"
        - "ADMIN_PORTAL"
        - "API"
        - "ECOM_TRANSPARENT_REDIRECT"
        - "ECOM_IFRAME"
        - "ECOM_HOSTED_PAYMENT_PAGE"
        - "API_EBIX"
        - "API_EDGEWISE"
        - "API_GALLAGHERS"
        - "API_GENKAN"
        - "API_RAW_IDEAS"
        - "AUCTION_PAY"
      subscriptions:
        type: "array"
        items:
          type: "integer"
          format: "int32"
      splashClosed:
        type: "boolean"
        default: false
      securityCode:
        type: "string"
      password:
        type: "array"
        items:
          type: "string"
        maxItems: 256
        minItems: 8
      userName:
        type: "string"
        position: 1
        description: "Email address"
      firstName:
        type: "string"
        position: 5
        description: "First name"
        minLength: 1
        maxLength: 32
        pattern: "^(?!\\s)([a-zA-Z0-9\\s-'])+(?<!\\s)"
      lastName:
        type: "string"
        position: 10
        description: "Last name"
        minLength: 1
        maxLength: 32
        pattern: "^(?!\\s)([a-zA-Z0-9\\s-'])+(?<!\\s)"
      landLine:
        type: "string"
        position: 15
        description: "Contact phone number"
        minLength: 10
        maxLength: 10
        pattern: "0[2378]\\d{8}"
      salutation:
        type: "string"
        position: 25
        description: "Salutation"
      address:
        position: 30
        description: "Address"
        $ref: "#/definitions/AddressDto"
      preferredContactMethod:
        type: "string"
        position: 35
        description: "Preferred contact method"
        enum:
        - "EMAIL"
        - "LANDLINE"
        - "MOBILE"
      dob:
        type: "string"
        format: "date-time"
        position: 40
        description: "Date of birth (yyyy-MM-dd)"
  Role:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      type:
        type: "string"
        enum:
        - "MGL"
        - "PAYER"
        - "BILLER"
        - "API"
        - "BATCH"
      status:
        type: "string"
        enum:
        - "INACTIVE"
        - "ACTIVE"
  RelatedTransactionDto:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      transactionDate:
        type: "string"
        format: "date-time"
      settlementDate:
        type: "string"
        format: "date-time"
      merchantId:
        type: "string"
      terminalId:
        type: "string"
      dynamicName:
        type: "string"
      paymentMethod:
        type: "string"
        enum:
        - "CARD"
        - "DIRECT_DEBIT"
        - "BPAY"
        - "AUSTRALIA_POST"
        - "LOCKED_BAG"
        - "FEE"
        - "SURCHARGE"
        - "REFUND"
      messageType:
        type: "string"
        enum:
        - "PRE_AUTH"
        - "CAPTURE"
        - "ONE_STEP"
        - "CANCEL"
        - "AUTO_CANCEL"
        - "REFUND"
      receiptNumber:
        type: "string"
      transactionAmount:
        type: "number"
      surcharge:
        type: "number"
      surchargeRate:
        type: "number"
      payerDrnNickname:
        type: "string"
      scheduleId:
        type: "integer"
        format: "int64"
      fee:
        type: "number"
      totalAmount:
        type: "number"
      status:
        type: "string"
        enum:
        - "APPROVED"
        - "ERROR"
        - "DECLINED"
        - "DISHONOURED"
        - "PROCESSED"
        - "SUBMITTED"
        - "PENDING"
        - "INITIAL"
        - "INPROGRESS"
        - "REFUNDED"
        - "PARTIALLY_REFUNDED"
        - "CLEARED"
        - "CANCELLED"
      channel:
        type: "string"
        enum:
        - "INTERNET"
        - "IVR"
        - "BPAY"
        - "AUSTRALIA_POST"
        - "LOCKED_BAG"
        - "PAYER_PORTAL_ONE_TIME"
        - "PAYER_PORTAL"
        - "BILLER_PORTAL"
        - "BILLER_PORTAL_VIRTUAL_TERMINAL"
        - "ADMIN_PORTAL"
        - "API"
        - "ECOM_TRANSPARENT_REDIRECT"
        - "ECOM_IFRAME"
        - "ECOM_HOSTED_PAYMENT_PAGE"
        - "API_EBIX"
        - "API_EDGEWISE"
        - "API_GALLAGHERS"
        - "API_GENKAN"
        - "API_RAW_IDEAS"
        - "AUCTION_PAY"
      geteComIndicator:
        type: "string"
      currency:
        type: "string"
      getdTRN:
        type: "integer"
        format: "int64"
      processorRef:
        type: "string"
      actionHints:
        type: "array"
        items:
          type: "string"
          enum:
          - "REFUND"
          - "SEND_RECEIPT"
          - "CANCEL"
      stan:
        type: "string"
      errorCode:
        type: "string"
      errorDescription:
        type: "string"
      error:
        $ref: "#/definitions/ErrorValue"
      switchResponseCode:
        type: "string"
      switchResponseDescription:
        type: "string"
      paymentDetails:
        $ref: "#/definitions/PaymentDetailsDto"
      userName:
        type: "string"
  PayerCreateRequest:
    type: "object"
    required:
    - "firstName"
    - "lastName"
    - "userName"
    properties:
      emailAddress:
        type: "string"
        minLength: 1
        maxLength: 255
        pattern: "([^\\s@]+@[^@\\s]+\\.[^@\\s]+)([a-zA-Z0-9])"
      mobileNumber:
        type: "string"
        minLength: 10
        maxLength: 10
        pattern: "04\\d{8}"
      id:
        type: "integer"
        format: "int64"
      lastLogin:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        enum:
        - "MIGRATION_READY"
        - "SELF_REGISTRATION_STARTED"
        - "BILLER_REGISTRATION_STARTED"
        - "MIGRATION_STARTED"
        - "SELF_REGISTRATION_COMPLETE_DETAILS"
        - "BILLER_REGISTRATION_CONFIRM_DETAILS"
        - "MIGRATION_CONFIRM_DETAILS"
        - "ACTIVE"
        - "INACTIVE"
      intlPhoneNumber:
        type: "string"
        minLength: 8
        maxLength: 21
        pattern: "\\+?\\d{8,20}"
      channel:
        type: "string"
        enum:
        - "INTERNET"
        - "IVR"
        - "BPAY"
        - "AUSTRALIA_POST"
        - "LOCKED_BAG"
        - "PAYER_PORTAL_ONE_TIME"
        - "PAYER_PORTAL"
        - "BILLER_PORTAL"
        - "BILLER_PORTAL_VIRTUAL_TERMINAL"
        - "ADMIN_PORTAL"
        - "API"
        - "ECOM_TRANSPARENT_REDIRECT"
        - "ECOM_IFRAME"
        - "ECOM_HOSTED_PAYMENT_PAGE"
        - "API_EBIX"
        - "API_EDGEWISE"
        - "API_GALLAGHERS"
        - "API_GENKAN"
        - "API_RAW_IDEAS"
        - "AUCTION_PAY"
      subscriptions:
        type: "array"
        items:
          type: "integer"
          format: "int32"
      captchaResponse:
        type: "string"
      userName:
        type: "string"
        position: 1
        description: "Email address"
      firstName:
        type: "string"
        position: 5
        description: "First name"
        minLength: 1
        maxLength: 32
        pattern: "^(?!\\s)([a-zA-Z0-9\\s-'])+(?<!\\s)"
      lastName:
        type: "string"
        position: 10
        description: "Last name"
        minLength: 1
        maxLength: 32
        pattern: "^(?!\\s)([a-zA-Z0-9\\s-'])+(?<!\\s)"
      landLine:
        type: "string"
        position: 15
        description: "Contact phone number"
        minLength: 10
        maxLength: 10
        pattern: "0[2378]\\d{8}"
      salutation:
        type: "string"
        position: 25
        description: "Salutation"
      address:
        position: 30
        description: "Address"
        $ref: "#/definitions/AddressDto"
      preferredContactMethod:
        type: "string"
        position: 35
        description: "Preferred contact method"
        enum:
        - "EMAIL"
        - "LANDLINE"
        - "MOBILE"
      dob:
        type: "string"
        format: "date-time"
        position: 40
        description: "Date of birth (yyyy-MM-dd)"
    description: "Request object for creating a new Payer"
  BillerHierarchyDto:
    type: "object"
    properties:
      biller:
        $ref: "#/definitions/BillerDto"
      children:
        type: "array"
        items:
          $ref: "#/definitions/BillerDto"
  TransactionDetailsResponseDto:
    type: "object"
    properties:
      refundStatus:
        type: "object"
        additionalProperties:
          type: "object"
      originalTransaction:
        $ref: "#/definitions/OriginalTransactionDto"
      relatedTransactions:
        type: "array"
        items:
          $ref: "#/definitions/RelatedTransactionDto"
  ConfirmCardTransactionRequestDtoV2:
    type: "object"
    required:
    - "dtrn"
    - "paidUsing"
    - "responseCode"
    - "responseTimestamp"
    properties:
      paidUsing:
        type: "string"
        enum:
        - "CARD"
        - "TOKEN"
      token:
        type: "string"
      cardInfo:
        $ref: "#/definitions/CardInfoDto"
      processorRef:
        type: "string"
      userType:
        type: "string"
        enum:
        - "MGL"
        - "PAYER"
        - "BILLER"
        - "API"
        - "BATCH"
      dtrn:
        type: "integer"
        format: "int64"
        position: 10
        description: "DTRN (Deft Transaction Reference Number) of the transaction"
      settlementDate:
        type: "string"
        format: "date-time"
        position: 40
        description: "Switch calculated settlement date of the transaction  - in the\
          \ format yyyy-MM-dd"
      responseCode:
        type: "string"
        position: 60
        description: "Response code from processing system"
        minLength: 1
        maxLength: 2147483647
        pattern: "([a-zA-Z0-9])*"
      responseMessage:
        type: "string"
        position: 70
        description: "Response description (if transaction not successull) from processing\
          \ system"
        pattern: "([\\u0020-\\u007E])*"
      responseTimestamp:
        type: "string"
        format: "date-time"
        position: 75
        description: "Transaction timestamp"
      stan:
        type: "string"
        position: 80
        description: "The System Trace Audit Number (STAN)"
        minLength: 0
        maxLength: 6
        pattern: "([a-zA-Z0-9])*"
      providerResponseCode:
        type: "string"
        position: 90
        description: "Switch response code"
      providerResponseMessage:
        type: "string"
        position: 100
        description: "Switch response message"
  PayerDrnModifyRequest:
    type: "object"
    properties:
      payerId:
        type: "integer"
        format: "int64"
      linkDrns:
        type: "array"
        items:
          $ref: "#/definitions/DrnAliasDto"
      unlinkDrns:
        type: "array"
        items:
          $ref: "#/definitions/DrnAliasDto"
  RefundCardTransactionRequestDto:
    type: "object"
    required:
    - "dtrn"
    properties:
      dtrn:
        type: "integer"
        format: "int64"
        position: 5
        description: "Deft Transaction Reference Number of original transaction"
      amount:
        type: "number"
        position: 10
        description: "Amount to refund off the original transaction (not including\
          \ any fee or surcharges refunded)"
      refundFee:
        type: "boolean"
        position: 15
        description: "Flag to indicate if Fee is to be refunded"
        default: false
      refundSurcharge:
        type: "boolean"
        position: 20
        description: "Flag to indicate if Surcharge is to be refunded"
        default: false
  ErrorValue:
    type: "object"
    properties:
      errorCode:
        type: "integer"
        format: "int32"
      message:
        type: "string"
      details:
        type: "string"
      type:
        type: "string"
        enum:
        - "ACCESS_ERROR"
        - "REQUEST_ERROR"
        - "LOGIC_ERROR"
        - "SYSTEM_ERROR"
        - "USER_MESSAGE"
        - "REFUND_ERROR"
        - "PAYMENT_METHOD_ERROR"
      field:
        type: "string"
  GetPaymentScheduleResponse:
    type: "object"
    required:
    - "amount"
    - "channel"
    - "currencyCode"
    - "cycleFrequency"
    - "cycleInterval"
    - "paymentMethod"
    - "startDate"
    properties:
      payerId:
        type: "integer"
        format: "int64"
      startDate:
        type: "string"
        format: "date-time"
      endDate:
        type: "string"
        format: "date-time"
      paymentMethod:
        type: "string"
        enum:
        - "DIRECT_DEBIT"
        - "CARD"
      cycleInterval:
        type: "string"
        enum:
        - "D"
        - "W"
        - "M"
        - "Y"
      cycleFrequency:
        type: "integer"
        format: "int32"
        minimum: 1.0
      amount:
        type: "number"
      secureToken:
        type: "string"
        minLength: 0
        maxLength: 16
        pattern: "([0-9])*"
      bankAccountDetails:
        $ref: "#/definitions/BankAccountDto"
      newStartDate:
        type: "string"
        format: "date-time"
      newAmount:
        type: "number"
      channel:
        type: "string"
        enum:
        - "INTERNET"
        - "IVR"
        - "BPAY"
        - "AUSTRALIA_POST"
        - "LOCKED_BAG"
        - "PAYER_PORTAL_ONE_TIME"
        - "PAYER_PORTAL"
        - "BILLER_PORTAL"
        - "BILLER_PORTAL_VIRTUAL_TERMINAL"
        - "ADMIN_PORTAL"
        - "API"
        - "ECOM_TRANSPARENT_REDIRECT"
        - "ECOM_IFRAME"
        - "ECOM_HOSTED_PAYMENT_PAGE"
        - "API_EBIX"
        - "API_EDGEWISE"
        - "API_GALLAGHERS"
        - "API_GENKAN"
        - "API_RAW_IDEAS"
        - "AUCTION_PAY"
      currencyCode:
        type: "string"
        minLength: 3
        maxLength: 3
        pattern: "([a-zA-Z0-9])*"
      rootBillerId:
        type: "integer"
        format: "int64"
      sendScheduleCreatedEmail:
        type: "boolean"
        default: false
      sendTransactionEmail:
        type: "boolean"
        default: false
      recipientEmail:
        type: "string"
        minLength: 0
        maxLength: 255
        pattern: "([^\\s@]+@[^@\\s]+\\.[^@\\s]+)([a-zA-Z0-9])"
      endPaymentCount:
        type: "integer"
        format: "int32"
        minimum: 1.0
      customDescription:
        type: "string"
        minLength: 0
        maxLength: 200
        pattern: "([a-zA-Z0-9\\s'/,.-])*"
      dbc:
        type: "integer"
        format: "int64"
      crn:
        type: "integer"
        format: "int64"
      drn:
        type: "string"
        minLength: 1
        maxLength: 20
        pattern: "([0-9])*"
      id:
        type: "integer"
        format: "int64"
      cardDetails:
        $ref: "#/definitions/CardInfoDto"
      createdTimestamp:
        type: "string"
        format: "date-time"
      lastUpdatedTimestamp:
        type: "string"
        format: "date-time"
      nextPaymentDate:
        type: "string"
        format: "date-time"
      numberOfPaymentsMade:
        type: "integer"
        format: "int32"
      surchargeAmount:
        type: "number"
      surchargeRate:
        type: "number"
      fee:
        type: "number"
      totalAmount:
        type: "number"
      status:
        type: "string"
        enum:
        - "ACTIVE"
        - "CANCELLED"
        - "COMPLETE"
        - "EXECUTING"
      payerName:
        type: "string"
      payerEmail:
        type: "string"
      billerId:
        type: "integer"
        format: "int64"
      billerName:
        type: "string"
      createdBy:
        $ref: "#/definitions/AuditUserDto"
      frequency:
        type: "string"
        enum:
        - "ONE_OFF"
        - "RECURRING"
  DRNGenerationRequestDto:
    type: "object"
    required:
    - "crn"
    - "dbc"
    properties:
      dbc:
        type: "integer"
        format: "int64"
        minimum: 1.0
      crn:
        type: "integer"
        format: "int64"
        minimum: 1.0
      channel:
        type: "string"
      rootBillerId:
        type: "integer"
        format: "int64"
  TransactionSummary:
    type: "object"
    properties:
      paymentMethod:
        type: "string"
      transactionCount:
        type: "integer"
        format: "int64"
      totalAmount:
        type: "number"
      currencyCode:
        type: "string"
  IndustryPaymentType:
    type: "object"
    properties:
      created:
        type: "string"
        format: "date-time"
      createdBy:
        type: "integer"
        format: "int64"
      updated:
        type: "string"
        format: "date-time"
      updatedBy:
        type: "integer"
        format: "int64"
      status:
        type: "string"
        enum:
        - "INACTIVE"
        - "ACTIVE"
      id:
        type: "integer"
        format: "int64"
      industry:
        $ref: "#/definitions/Industry"
      paymentType:
        $ref: "#/definitions/PaymentType"
      casualSurcharge:
        type: "number"
      recursivePayerSurcharge:
        type: "number"
      recursiveSurcharge:
        type: "number"
      directDebitFee:
        type: "number"
      upperTransactionLimit:
        type: "number"
      allowRetry:
        type: "boolean"
        default: false
      retryPeriod:
        type: "integer"
        format: "int32"
      description:
        type: "string"
      active:
        type: "boolean"
        default: false
  TransactionAmountCalcResponse:
    type: "object"
    properties:
      schemeName:
        type: "string"
      fee:
        type: "number"
      surchargeAmount:
        type: "number"
      surchargeRate:
        type: "number"
      totalAmount:
        type: "number"
      currencyCode:
        type: "string"
      responseTimestamp:
        type: "string"
        format: "date-time"
  RoleCreateDto:
    type: "object"
    properties:
      name:
        type: "string"
      type:
        type: "string"
        enum:
        - "MGL"
        - "PAYER"
        - "BILLER"
        - "API"
        - "BATCH"
      permissionIds:
        type: "array"
        items:
          type: "integer"
          format: "int64"
  BankAccountResponseDto:
    type: "object"
    required:
    - "accountName"
    - "accountNumber"
    - "bsb"
    properties:
      bsb:
        type: "string"
        minLength: 6
        maxLength: 6
        pattern: "([0-9])*"
      accountNumber:
        type: "string"
        minLength: 1
        maxLength: 9
        pattern: "([0-9])*"
      accountName:
        type: "string"
        minLength: 1
        maxLength: 100
        pattern: "([a-zA-Z0-9\\s'.-])*"
      defaultFlag:
        type: "boolean"
        default: false
      token:
        type: "string"
        readOnly: true
      id:
        type: "integer"
        format: "int64"
      payerId:
        type: "integer"
        format: "int64"
      warningMessageCode:
        type: "integer"
        format: "int32"
      warningMessage:
        type: "string"
      bankBranch:
        $ref: "#/definitions/BankBranchDto"
      created:
        type: "string"
        format: "date-time"
      updated:
        type: "string"
        format: "date-time"
  ErrorDto:
    type: "object"
    properties:
      fieldName:
        type: "string"
      message:
        type: "string"
      code:
        type: "integer"
        format: "int32"
      substitutes:
        type: "array"
        items:
          type: "object"
  CalculateSurchargeResponse:
    type: "object"
    properties:
      amount:
        type: "number"
      surchargeAmount:
        type: "number"
      totalAmount:
        type: "number"
      currencyCode:
        type: "string"
  MglUserCreateRequest:
    type: "object"
    required:
    - "firstName"
    - "lastName"
    - "officeLocation"
    - "role"
    - "userName"
    properties:
      emailAddress:
        type: "string"
        minLength: 1
        maxLength: 255
        pattern: "([^\\s@]+@[^@\\s]+\\.[^@\\s]+)([a-zA-Z0-9])"
      mobileNumber:
        type: "string"
        minLength: 10
        maxLength: 10
        pattern: "04\\d{8}"
      officeLocation:
        type: "integer"
        format: "int64"
        description: "ID of Office Location object"
      role:
        type: "integer"
        format: "int64"
        description: "ID of Role object"
      status:
        type: "string"
        description: "Record status, ACTIVE by default"
        enum:
        - "INACTIVE"
        - "ACTIVE"
      userName:
        type: "string"
        position: 1
        description: "Email address"
      firstName:
        type: "string"
        position: 5
        description: "First name"
        minLength: 1
        maxLength: 32
        pattern: "^(?!\\s)([a-zA-Z0-9\\s-'])+(?<!\\s)"
      lastName:
        type: "string"
        position: 10
        description: "Last name"
        minLength: 1
        maxLength: 32
        pattern: "^(?!\\s)([a-zA-Z0-9\\s-'])+(?<!\\s)"
      landLine:
        type: "string"
        position: 15
        description: "Contact phone number"
        minLength: 10
        maxLength: 10
        pattern: "0[2378]\\d{8}"
    description: "Request object for creating a new MGL user"
  RoleDetailedDto:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      type:
        type: "string"
        enum:
        - "MGL"
        - "PAYER"
        - "BILLER"
        - "API"
        - "BATCH"
      status:
        type: "string"
        enum:
        - "INACTIVE"
        - "ACTIVE"
      permissions:
        type: "array"
        items:
          $ref: "#/definitions/PermissionDetailedDto"
  DeftReferenceNumber:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      drn:
        type: "string"
      nickname:
        type: "string"
      type:
        type: "string"
        enum:
        - "LONG"
        - "SHORT"
        - "BILLER_CODE"
      billerAccount:
        $ref: "#/definitions/BillerDto"
      created:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        enum:
        - "INACTIVE"
        - "ACTIVE"
  ErrorContainerDto:
    type: "object"
    properties:
      errors:
        type: "array"
        items:
          $ref: "#/definitions/ErrorDto"
  PayerDrnLink:
    type: "object"
    required:
    - "drn"
    - "drnId"
    - "endDate"
    - "payerId"
    - "startDate"
    properties:
      payerId:
        type: "integer"
        format: "int64"
        position: 5
        description: "id of the Payer"
      drnId:
        type: "integer"
        format: "int64"
        position: 10
        description: "id of the DRN"
      drn:
        type: "string"
        position: 15
        description: "DRN number"
      startDate:
        type: "string"
        format: "date-time"
        position: 20
        description: "start date of the Payer-DRN link"
      endDate:
        type: "string"
        format: "date-time"
        position: 25
        description: "end date of the Payer-DRN link"
      nickName:
        type: "string"
        position: 30
        description: "nick name for the DRN, assigned by the Payer"
      status:
        type: "string"
        position: 35
        description: "status of the Payer-DRN link"
        enum:
        - "ACTIVE"
        - "INACTIVE"
        - "SUSPENDED"
    description: "Representation of a Payer-DRN link"
  FeeConfigurationForBillerDto:
    type: "object"
    properties:
      domesticFee:
        type: "number"
      domesticSurcharge:
        type: "number"
      internationalFee:
        type: "number"
      internationalSurcharge:
        type: "number"
      inherited:
        type: "boolean"
        default: false
  LegacyBillerPaymentDto:
    type: "object"
    properties:
      accessible:
        type: "boolean"
        default: false
      drnId:
        type: "integer"
        format: "int64"
      paymentDescriptions:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
      directDebitMinTxnAmount:
        type: "number"
      directDebitMaxTxnAmount:
        type: "number"
      auctionPayEmail:
        type: "string"
      industryId:
        type: "integer"
        format: "int64"
      status:
        type: "string"
      name:
        type: "string"
      id:
        type: "integer"
        format: "int64"
      type:
        type: "string"
        enum:
        - "GROUP_CUSTOMER"
        - "BUSINESS_CUSTOMER"
        - "FACILITY"
        - "ACCOUNT"
      supportedSchemes:
        type: "array"
        readOnly: true
        uniqueItems: true
        items:
          type: "string"
      transactionLowerLimit:
        type: "number"
        readOnly: true
      transactionUpperLimit:
        type: "number"
        readOnly: true
  PaymentType:
    type: "object"
    properties:
      created:
        type: "string"
        format: "date-time"
      createdBy:
        type: "integer"
        format: "int64"
      updated:
        type: "string"
        format: "date-time"
      updatedBy:
        type: "integer"
        format: "int64"
      status:
        type: "string"
        enum:
        - "INACTIVE"
        - "ACTIVE"
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      description:
        type: "string"
      paymentMethod:
        type: "string"
        enum:
        - "CARD"
        - "DIRECT_DEBIT"
        - "BPAY"
        - "AUSTRALIA_POST"
        - "LOCKED_BAG"
        - "FEE"
        - "SURCHARGE"
        - "REFUND"
      paymentCombination:
        $ref: "#/definitions/PaymentCombination"
      active:
        type: "boolean"
        default: false
  UserSearchCriteria:
    type: "object"
    properties:
      userName:
        type: "string"
      emailAddress:
        type: "string"
      firstName:
        type: "string"
      status:
        type: "string"
      lastName:
        type: "string"
      officeLocation:
        type: "integer"
        format: "int64"
      pageInfo:
        $ref: "#/definitions/Paging"
  PageSummary:
    type: "object"
    properties:
      limit:
        type: "integer"
        format: "int32"
        minimum: 0.0
      offset:
        type: "integer"
        format: "int32"
        minimum: 0.0
      order:
        type: "string"
        enum:
        - "ASC"
        - "DESC"
      orderBy:
        type: "string"
      total:
        type: "integer"
        format: "int64"
  PaymentScheduleCreateRequest:
    type: "object"
    required:
    - "amount"
    - "channel"
    - "currencyCode"
    - "cycleFrequency"
    - "cycleInterval"
    - "paymentMethod"
    - "startDate"
    properties:
      payerId:
        type: "integer"
        format: "int64"
      startDate:
        type: "string"
        format: "date-time"
      endDate:
        type: "string"
        format: "date-time"
      paymentMethod:
        type: "string"
        enum:
        - "DIRECT_DEBIT"
        - "CARD"
      cycleInterval:
        type: "string"
        enum:
        - "D"
        - "W"
        - "M"
        - "Y"
      cycleFrequency:
        type: "integer"
        format: "int32"
        minimum: 1.0
      amount:
        type: "number"
      secureToken:
        type: "string"
        minLength: 0
        maxLength: 16
        pattern: "([0-9])*"
      bankAccountDetails:
        $ref: "#/definitions/BankAccountDto"
      newStartDate:
        type: "string"
        format: "date-time"
      newAmount:
        type: "number"
      channel:
        type: "string"
        enum:
        - "INTERNET"
        - "IVR"
        - "BPAY"
        - "AUSTRALIA_POST"
        - "LOCKED_BAG"
        - "PAYER_PORTAL_ONE_TIME"
        - "PAYER_PORTAL"
        - "BILLER_PORTAL"
        - "BILLER_PORTAL_VIRTUAL_TERMINAL"
        - "ADMIN_PORTAL"
        - "API"
        - "ECOM_TRANSPARENT_REDIRECT"
        - "ECOM_IFRAME"
        - "ECOM_HOSTED_PAYMENT_PAGE"
        - "API_EBIX"
        - "API_EDGEWISE"
        - "API_GALLAGHERS"
        - "API_GENKAN"
        - "API_RAW_IDEAS"
        - "AUCTION_PAY"
      currencyCode:
        type: "string"
        minLength: 3
        maxLength: 3
        pattern: "([a-zA-Z0-9])*"
      rootBillerId:
        type: "integer"
        format: "int64"
      sendScheduleCreatedEmail:
        type: "boolean"
        default: false
      sendTransactionEmail:
        type: "boolean"
        default: false
      recipientEmail:
        type: "string"
        minLength: 0
        maxLength: 255
        pattern: "([^\\s@]+@[^@\\s]+\\.[^@\\s]+)([a-zA-Z0-9])"
      endPaymentCount:
        type: "integer"
        format: "int32"
        minimum: 1.0
      customDescription:
        type: "string"
        minLength: 0
        maxLength: 200
        pattern: "([a-zA-Z0-9\\s'/,.-])*"
      dbc:
        type: "integer"
        format: "int64"
      crn:
        type: "integer"
        format: "int64"
      drn:
        type: "string"
        minLength: 1
        maxLength: 20
        pattern: "([0-9])*"
  BillerRoleUpdateRequest:
    type: "object"
    properties:
      billerRolePairs:
        type: "array"
        items:
          $ref: "#/definitions/BillerRoleCreate"
  PayerSearchResult:
    type: "object"
    properties:
      summary:
        $ref: "#/definitions/PageSummary"
      results:
        type: "array"
        items:
          $ref: "#/definitions/PayerResponseDto"
  TransactionSearchRequest:
    type: "object"
    properties:
      limit:
        type: "integer"
        format: "int32"
        minimum: 0.0
      offset:
        type: "integer"
        format: "int32"
        minimum: 0.0
      order:
        type: "string"
        enum:
        - "ASC"
        - "DESC"
      orderBy:
        type: "string"
      payerIds:
        type: "array"
        items:
          type: "integer"
          format: "int64"
      drn:
        type: "string"
      minTransactionAmount:
        type: "number"
      maxTransactionAmount:
        type: "number"
      minTotalAmount:
        type: "number"
      maxTotalAmount:
        type: "number"
      fromDateTime:
        type: "string"
        pattern: "(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}[+-]\\d{4})"
      toDateTime:
        type: "string"
        pattern: "(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}[+-]\\d{4})"
      receiptNumber:
        type: "string"
      billerId:
        type: "integer"
        format: "int64"
      cardFirstSixDigits:
        type: "string"
      cardLastFourDigits:
        type: "string"
      bsb:
        type: "string"
      cardHolderName:
        type: "string"
      accountNumber:
        type: "string"
      paymentMethod:
        type: "string"
      cardScheme:
        type: "string"
        pattern: "|VISA|MASTERCARD|AMERICAN EXPRESS|DINERS CLUB INTERNATIONAL"
      cardSchemes:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
      channel:
        type: "string"
      channels:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
      messageType:
        type: "string"
      status:
        type: "string"
      statuses:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
      pageInfo:
        $ref: "#/definitions/Paging"
      scheduledPaymentOnly:
        type: "boolean"
        default: false
      scheduleId:
        type: "integer"
        format: "int32"
      includeInactiveDrns:
        type: "boolean"
        default: false
      dtrn:
        type: "integer"
        format: "int64"
  TransactionTotalAmountRequestDto:
    type: "object"
    properties:
      amount:
        type: "number"
      surcharge:
        type: "number"
      feeAmount:
        type: "number"
  TransactionSearchResponse:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      transactionDate:
        type: "string"
        format: "date-time"
      settlementDate:
        type: "string"
        format: "date-time"
      billerName:
        type: "string"
      drn:
        type: "string"
      drnNickName:
        type: "string"
      paymentMethod:
        type: "string"
        enum:
        - "CARD"
        - "DIRECT_DEBIT"
        - "BPAY"
        - "AUSTRALIA_POST"
        - "LOCKED_BAG"
        - "FEE"
        - "SURCHARGE"
        - "REFUND"
      messageType:
        type: "string"
        enum:
        - "PRE_AUTH"
        - "CAPTURE"
        - "ONE_STEP"
        - "CANCEL"
        - "AUTO_CANCEL"
        - "REFUND"
      receiptNumber:
        type: "string"
      transactionAmount:
        type: "number"
      totalAmount:
        type: "number"
      status:
        type: "string"
        enum:
        - "APPROVED"
        - "ERROR"
        - "DECLINED"
        - "DISHONOURED"
        - "PROCESSED"
        - "SUBMITTED"
        - "PENDING"
        - "INITIAL"
        - "INPROGRESS"
        - "REFUNDED"
        - "PARTIALLY_REFUNDED"
        - "CLEARED"
        - "CANCELLED"
      scheduleId:
        type: "integer"
        format: "int64"
      channel:
        type: "string"
        enum:
        - "INTERNET"
        - "IVR"
        - "BPAY"
        - "AUSTRALIA_POST"
        - "LOCKED_BAG"
        - "PAYER_PORTAL_ONE_TIME"
        - "PAYER_PORTAL"
        - "BILLER_PORTAL"
        - "BILLER_PORTAL_VIRTUAL_TERMINAL"
        - "ADMIN_PORTAL"
        - "API"
        - "ECOM_TRANSPARENT_REDIRECT"
        - "ECOM_IFRAME"
        - "ECOM_HOSTED_PAYMENT_PAGE"
        - "API_EBIX"
        - "API_EDGEWISE"
        - "API_GALLAGHERS"
        - "API_GENKAN"
        - "API_RAW_IDEAS"
        - "AUCTION_PAY"
      billerId:
        type: "integer"
        format: "int64"
      drnAccessible:
        type: "boolean"
        default: false
  WalletPaymentCardDto:
    type: "object"
    required:
    - "cardBin"
    - "cardExpiryDate"
    - "cardHolderName"
    - "lastFourDigits"
    - "token"
    - "tokenRefNumber"
    properties:
      cardExpiryDate:
        type: "string"
      token:
        type: "string"
        minLength: 1
        maxLength: 2147483647
        pattern: "([0-9])*"
      cardBin:
        type: "string"
        pattern: "([0-9])*"
      lastFourDigits:
        type: "string"
        pattern: "([0-9])*"
      cardHolderName:
        type: "string"
        minLength: 1
        maxLength: 2147483647
        pattern: "([a-zA-Z0-9\\s'.-])*"
      tokenRefNumber:
        type: "string"
        minLength: 0
        maxLength: 15
        pattern: "([0-9])*"
      rootBillerId:
        type: "integer"
        format: "int64"
      dbc:
        type: "integer"
        format: "int64"
      payerId:
        type: "integer"
        format: "int64"
      default:
        type: "boolean"
        default: false
  SearchResultPayerResponseDto:
    type: "object"
    properties:
      summary:
        $ref: "#/definitions/PageSummary"
      results:
        type: "array"
        items:
          $ref: "#/definitions/PayerResponseDto"
  DrnAliasDto:
    type: "object"
    required:
    - "drn"
    properties:
      drn:
        type: "string"
        minLength: 1
        maxLength: 20
        pattern: "([0-9])*"
      ivrCode:
        type: "string"
        minLength: 6
        maxLength: 6
        pattern: "([0-9])*"
      nickname:
        type: "string"
        minLength: 0
        maxLength: 20
        pattern: "^(?!\\s)[-a-zA-Z0-9\\s,./]{0,20}(?<!\\s)"
  DrnValidationForPaymentResponse:
    type: "object"
    properties:
      content:
        $ref: "#/definitions/LegacyBillerPaymentDto"
      errors:
        type: "array"
        items:
          $ref: "#/definitions/ErrorValue"
      valid:
        type: "boolean"
        default: false
  UserRole:
    type: "object"
    properties:
      created:
        type: "string"
        format: "date-time"
      createdBy:
        type: "integer"
        format: "int64"
      updated:
        type: "string"
        format: "date-time"
      updatedBy:
        type: "integer"
        format: "int64"
      status:
        type: "string"
        enum:
        - "INACTIVE"
        - "ACTIVE"
      id:
        type: "integer"
        format: "int64"
      deftUser:
        $ref: "#/definitions/DeftUser"
      role:
        $ref: "#/definitions/Role"
      biller:
        $ref: "#/definitions/Biller"
      active:
        type: "boolean"
        default: false
  TransactionTotalAmountResponseDto:
    type: "object"
    properties:
      amount:
        type: "number"
      surchargeAmount:
        type: "number"
      feeAmount:
        type: "number"
      totalAmount:
        type: "number"
  WalletPaymentCardExpiryDateDto:
    type: "object"
    required:
    - "cardExpiryDate"
    properties:
      cardExpiryDate:
        type: "string"
  RolePermission:
    type: "object"
    properties:
      created:
        type: "string"
        format: "date-time"
      createdBy:
        type: "integer"
        format: "int64"
      updated:
        type: "string"
        format: "date-time"
      updatedBy:
        type: "integer"
        format: "int64"
      status:
        type: "string"
        enum:
        - "INACTIVE"
        - "ACTIVE"
      id:
        type: "integer"
        format: "int64"
      role:
        $ref: "#/definitions/Role"
      permission:
        $ref: "#/definitions/Permission"
      active:
        type: "boolean"
        default: false
